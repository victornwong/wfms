<?xml version="1.0" encoding="UTF-8"?>
<?page id="soaproc2_mod"?>
<zk>
<zscript src="../rwglobal/rwglobaldefs.zs" />
<zscript src="../rwglobal/uploadedWorksheet_v1.zs" />
<zscript src="../rwglobal/uploadDocu_v1.zs" />
<zscript src="../rwglobal/rwsqlfuncs.zs" />
<zscript src="../rwglobal/emailfuncs.zs" />
<zscript src="../rwglobal/fc6_CustomerSelector.zs" />
<zscript src="../rws_customer/customerManager_funcs.zs" />
<zscript>
<![CDATA[
MYTITLE = "SOA Template Processor";
MYVERSION = "v0.2";
MYPANEL = "soaproc2";
/*
Title		: Statement of Account template processor
Written by	: Victor Wong

**Notes**
Focus uses mr000 and u0000 to store customer info
select cust.name,cust.code,cust.code2,
custd.address1yh, custd.address2yh, custd.address3yh, custd.address4yh,
custd.telyh, custd.faxyh, custd.contactyh, custd.deliverytoyh,
custd.salesrepyh, custd.emailyh
from mr000 cust
left join u0000 custd on custd.extraid = cust.masterid
where
cust.type=195
order by cust.name

--
14/11/2013: tie to extra customer's contact-points to send SOA directly

*/
import java.util.*;
import java.text.*;
import java.io.*;
import java.lang.Float;
import groovy.sql.Sql;
import org.zkoss.zk.ui.*;
import org.zkoss.zk.zutl.*;
import java.math.BigDecimal;
import java.awt.Color;
import org.zkoss.util.media.AMedia;
import org.zkoss.zul.*;
import org.apache.poi.xssf.usermodel.*;
import org.apache.poi.ss.util.*;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.hssf.usermodel.*;
import org.victor.*;
sechand = new SecurityFuncs();

myincludeid = Executions.getCurrent().getParameter("myid");
useraccessobj = sechand.getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);

kiboo = new Generals();
sqlhand = new SqlFuncs();
lbhand = new ListboxHandler();
guihand = new GuiFuncs();
luhand = new LookupFuncs();
dmshand = new DMSFuncs();

Object mainUpload_Data = null;
ArrayList soaData = new ArrayList();

global_selected_customerid = "";
global_selected_customername = "";

DecimalFormat nf2 = new DecimalFormat("0.00");
DecimalFormat nf3 = new DecimalFormat("###,##0.00");
DateFormat dtfm = new SimpleDateFormat("yyyy-MM-dd");
DateFormat dtfmyr = new SimpleDateFormat("dd-MMM-yyyy");

glob_processed_filename = "";

public class headerposition
{
	public int therow;
	public int thecolumn;
	public String myname;
	
	public headerposition(int irow, int icol, String iname)
	{
		therow = irow;
		thecolumn = icol;
		myname = iname;
	}
}

public class soaObj
{
	public String invoice_no;
	public String invoice_date;
	public String rental_due;
	public String invoice_amount;
	public String receipt_amount;
	public String balance;
	public String narration;
	public float interest_chg;
	
	public soaObj(String tinvno, String tinvdate, String trentald, String tinvamt, string trecamt, String tbalance, String inarr)
	{
		invoice_no = tinvno;
		invoice_date = tinvdate;
		rental_due = trentald;
		invoice_amount = tinvamt;
		receipt_amount = trecamt;
		balance = tbalance;
		narration = inarr;
		// TODO calc interest-charge by rental-due and today's date
		interest_chg = 0.0;
	}
}

// Callback after picking customer: fc6_CustomerSelector.zs
void pickcustomer_Callback()
{
	custr = getFocus_CustomerRec(global_selected_customerid);
	intvs = custr.get("interestayh").trim();
	intrate = 21; // TODO hardcoded default interest

	if(!intvs.equals(""))
		intrate = Float.parseFloat(intvs.replaceAll("%",""));

	customer_interest.setValue(intrate.toString());

	showCustomerExtraContacts_2(global_selected_customerid,extconts_holder,"extconts_lb"); // customerManager_funcs.zs
	fillDocumentsList_2(documents_holder,FC6CUST_PREFIX,global_selected_customerid);
}

void doFunc(Object iwhat)
{
	itype = iwhat.getId();

	if(itype.equals("uploadsoa_b"))
	{
		mainUpload_Data = new uploadedWorksheet();
		mainUpload_Data.getUploadFileData();
		if(mainUpload_Data.thefiledata == null)
		{
			guihand.showMessageBox("ERR: Invalid worksheet");
			upload_filename.setValue("");
			return;
		}
		upload_filename.setValue(mainUpload_Data.thefilename);
	}

	if(itype.equals("emaildoc_b"))
	{
		if( !lbhand.check_ListboxExist_SelectItem(extconts_holder,"extconts_lb") ) return;
		if( !lbhand.check_ListboxExist_SelectItem(documents_holder,"doculinks_lb") ) return;

		if(extconts_lb.getSelectedCount() == 0 || doculinks_lb.getSelectedCount() == 0) return;
		if(useraccessobj.email.equals("")) return;

		emailmsg_tb.setValue("");
		emailsubj_tb.setValue("");
		email_pop.open(iwhat);

	}

	if(itype.equals("realemaildoc_b"))
	{
		emailDocumentFromDS(useraccessobj.email, extconts_lb.getSelectedItems(),
			doculinks_lb.getSelectedItems(), emailmsg_tb.getValue(), emailsubj_tb.getValue() );

		email_pop.close();
	}

	if(itype.equals("gensoa_narr_b")) generateExcelSOA(1);
	if(itype.equals("gensoa_nonarr_b")) generateExcelSOA(2);
}

// Can be moddified or make this into general-purpose func TODO
void emailDocumentFromDS(String ireplyto, Object iextcnts, Object idocs, String iemsg, String isubject)
{
	kcnts = iextcnts.toArray();
	cntseml = "";
	for(i=0; i<kcnts.length;i++)
	{
		cntseml += lbhand.getListcellItemLabel(kcnts[i],2) + ","; // HARDCODED in customerManager_funcs.extcontshds2
	}
	try {
	cntseml = cntseml.substring(0,cntseml.length()-1);
	} catch (Exception e) {}

	if(cntseml.equals("")) { guihand.showMessageBox("No email-address to send to.."); return; }

	Sql ds_sql = sqlhand.DMS_Sql();
	if(ds_sql == null) { guihand.showMessageBox("DBERR: Cannot connect to document server"); return; }

	kdcs = idocs.toArray();
	dcids = "";

	for(i=0;i<kdcs.length;i++)
	{
		dcids += lbhand.getListcellItemLabel(kdcs[i],0) + ",";
	}
	try {
	dcids = dcids.substring(0,dcids.length()-1);
	} catch (Exception e) {}

	sqlstm = "select file_name,file_data from DocumentTable where origid in (" + dcids + ")";
	drcs = ds_sql.rows(sqlstm);

	String[] tmpfnames = new String[drcs.size()];
	fncnt = 0;

	for(d : drcs)
	{
		kfilename = d.get("file_name");
		kblob = d.get("file_data");
		kbarray = kblob.getBytes(1,(int)kblob.length());
		tmpfnames[fncnt] = session.getWebApp().getRealPath("tmp/" + kfilename);
		outstream = new FileOutputStream(tmpfnames[fncnt]);
		outstream.write(kbarray);
		outstream.close();
		fncnt++;
	}
	ds_sql.close();
	
	// 06/12/2013: HARDCODE, send a copy to creditcontrol@rentwise.com
	cntseml += ",creditcontrol@rentwise.com";

	gmail_sendEmailWithAttachment_2("", GMAIL_username, GMAIL_password, GMAIL_username, cntseml,
	isubject, iemsg, tmpfnames,ireplyto);

}

// itype: 1=with narration, 2=no narration
void generateExcelSOA(int itype)
{
	org.apache.poi.hssf.usermodel.HSSFRow checkrow;
	Cell kcell;
	pgadder = 4;
	page_break = 28;
	page2_break = 46;

	soaData.clear();

	try
	{
		if(mainUpload_Data == null) return;
		if(mainUpload_Data.thefiledata == null) return;
	}
	catch (Exception e) { return; }

	try
	{
		//ByteArrayInputStream mybytes = new ByteArrayInputStream(mainUpload_Data.thefiledata);
		HSSFWorkbook excelWB = new HSSFWorkbook(mainUpload_Data.thefiledata);
		FormulaEvaluator evaluator = excelWB.getCreationHelper().createFormulaEvaluator();
		numsheets = excelWB.getNumberOfSheets();

		sheet = excelWB.getSheetAt(0);
		numrows = sheet.getPhysicalNumberOfRows();
		numc = 0;
		FOC6_COL_READ = 10;
		soa_inv_total = "";
		soa_recp_total = "";
		soa_balance_total = "";
		
		// hardcoded to read company-name from B9
		/*
		checkrow = sheet.getRow(8);
		kcell = checkrow.getCell(1);
		compname = POI_GetCellContentString(kcell,evaluator,"#").trim();
		compname = compname.replaceAll(" \\/","_");
		*/

		// hardcoded to read from row 9 onwards..
		for(rw=9; rw<1000; rw++)
		{
			String[] thed = new String[9];
			checkrow = sheet.getRow(rw);
			
			for(rc=1; rc<FOC6_COL_READ; rc++)
			{
				kcell = checkrow.getCell(rc);
				if(kcell != null)
				{
					thed[rc-1] = POI_GetCellContentString(kcell,evaluator,"#.00").trim();
				}
				else
					thed[rc-1] = "";
			}

			if(thed[1].equals("Total"))
			{
				soa_inv_total = thed[4];
				soa_recp_total = thed[5];
				soa_balance_total = thed[6];
			}

			if(thed[0].equals("")) break;

			//soaObj ikdo = new soaObj(thed[0],thed[1],thed[2],thed[3],thed[4],thed[5],thed[6]);
			soaData.add(thed);
			numc++;
		}
		
	}
	catch (java.io.IOException e)
	{
		guihand.showMessageBox("ERR: Cannot parse worksheet");
		return;
	}

	// prep customer-details
	custdetstr = "";
	custr = getFocus_CustomerRec(global_selected_customerid);
	if(custr != null)
	{
		custdetstr = custr.get("name") + "\n" +
		custr.get("address1yh") + ", " + custr.get("address2yh") + "\n" +
		custr.get("address3yh") + ", " + custr.get("address4yh") + "\n" +
		"Contact: " + custr.get("contactyh") + "\n" +
		"Tel: " + custr.get("telyh") + " Fax: " + custr.get("faxyh");

		// + "\nDeliverTo: " + custr.get("deliverytoyh") + "\n" +
		//"Customer Email: " + custr.get("emailyh") + "\nSalesRep: " + custr.get("salesrepyh");
	}

	compname = custr.get("name");

	templatefn = "rwimg/soaTemplate_2.xls";

	inpfn = session.getWebApp().getRealPath(templatefn);
	InputStream inp = new FileInputStream(inpfn);
	Workbook wwb = WorkbookFactory.create(inp);
	Sheet wsheet = wwb.getSheetAt(0);
	FormulaEvaluator evaluator = wwb.getCreationHelper().createFormulaEvaluator();
	org.apache.poi.hssf.usermodel.HSSFRow mainhdrow = wsheet.getRow(3);
/*	
	DataFormat numformat = wwb.createDataFormat();
	CellStyle numstyle = wwb.createCellStyle();
	numstyle.setDataFormat(numformat.getFormat("###,###.#0"));
*/
	Font wfont = wwb.createFont();
	wfont.setFontHeightInPoints((short)8);
	wfont.setFontName("Arial");

	Font nfont = wwb.createFont(); // narration-font
	nfont.setFontHeightInPoints((short)6);
	nfont.setFontName("Arial");

	wkarray = soaData.toArray();
	
	sttd = kiboo.getDateFromDatebox(statement_date);
	sttds = "Statement date: " + sttd;
	dfints = "Interest rate: " + customer_interest.getValue() + "%";

	excelInsertString(wsheet,0,0,custdetstr); // insert customer-det into worksheet
	excelInsertString(wsheet,0,8,sttds); // insert statement date
	excelInsertString(wsheet,0,5,dfints); // insert interest rate

	if(itype == 2) excelInsertString(wsheet,3,8,""); // remove "Narration" for no-narration type

	rowcounter = 0;
	totalinterest = 0.0;
	sumundef = sum0_30 = sum31_60 = sum61_90 = sum91_120 = sum121_150 = sum150_on = 0.0;
	unadjcred = 0.0;

	//debugbox.setValue(debugbox.getValue() + "\nD> wkarray = " + wkarray.length.toString());
	//debugbox.setValue(debugbox.getValue() + "\nD> insert -30days" );

	for(i=0;i<wkarray.length;i++)
	{
		Date invdate, duedate;

		wop = wkarray[i];
		pgbreakd = false;
		//if(wop[0].equals("Unadjusted credits")) { unadjusted = wop; continue; }
		/*
		debugbox.setValue(debugbox.getValue() + "\nD> wop = " + wop[0] + " : " + wop[1] + " : " + wop[2] + " : " + 
		wop[3] + " : " + wop[4] + " : " + wop[5] + " : "
		);
		*/

		chkrwi = "";
		try { chkrwi = (wop[0].substring(0,3)).toUpperCase(); }
		catch (Exception e) {}

		currentrow = pgadder + rowcounter;

		tmprwi = "";
		try { tmprwi = wop[0].replaceAll("RWI:",""); }
		catch (Exception e) {}

		POI_CellSetAllBorders(wwb,excelInsertString(wsheet,currentrow,0,tmprwi),wfont,true,"");

		invdstr = "";
		if(!wop[1].equals("") && wop[1] != null)
		{
			invdate = (Date)dtfm.parse(wop[1]);
			invdstr = dtfm.format(invdate);
		}

		//excelInsertString(wsheet,pgadder+i,1,invdstr);

		duedstr = "";
		duedate = new Date();

		try {
		duedate = (Date)dtfm.parse(wop[3]);
		duedstr = dtfm.format(duedate);
		} catch (Exception e) {}

		kstr = duedstr; // default to invoice-due-date
		//if(!chkrwi.equals("RWI")) kstr = invdstr; // wop[1]; // if it's an RWI, use RWI date instead TODO
		POI_CellSetAllBorders(wwb,excelInsertString(wsheet,currentrow,1,kstr),wfont,true,"");

		for(j=4;j<7;j++) // inv-amt, receipt, balance
		{
			vak = 0;
			try {
			vak = Float.parseFloat(wop[j]);
			} catch (Exception e) {}
			if(vak < 0) vak = vak * -1;
			kstr = (vak == 0) ? "" : vak.toString();
			wop[j] = kstr; 

			POI_CellSetAllBorders(wwb,excelInsertNumber(wsheet,currentrow,j-2,wop[j]),wfont,true,"");
			//excelInsertString(wsheet,currentrow,j+1,wop[j]);
			//debugbox.setValue( debugbox.getValue() + "\nIRB> wop " + j.toString() + " = " + wop[j] );
		}

		dydff = calcDayDiff(duedate,statement_date.getValue()) - 14; // 11/09/2013: grace period 14 days for any aging
		if(dydff < 0) dydff = 0;

		intrcs = "";
		intrc = 0;

		if(!wop[4].equals("") && (chkrwi.equals("RWI") || chkrwi.equals("DNT")) )
		{
			// interest calc based on balance - not inv amount
			try {
			intrc = (Float.parseFloat(wop[6]) * Float.parseFloat(customer_interest.getValue()) / 100) / 365 * dydff;
			} catch (Exception e) {}

			if(intrc > 0)
			{
				totalinterest += intrc;
				intrcs = nf2.format(intrc);
			}
		}

		POI_CellSetAllBorders(wwb,excelInsertNumber(wsheet,currentrow,5,intrcs),wfont,true,""); // interest

		if(dydff == 0)
			agestr = "";
		else
		{
			if(chkrwi.equals("RWI") || chkrwi.equals("DNT"))
				agestr = dydff.toString();
			else
				agestr = "";
		}

		POI_CellSetAllBorders(wwb,excelInsertNumber(wsheet,currentrow,7,agestr),wfont,true,"###"); // age

		whtstr = wop[7]; // narration
		if(chkrwi.equals("RWI")) whtstr = wop[8];
		if(itype == 2) whtstr = ""; // no-narration type
		POI_CellSetAllBorders(wwb,excelInsertString(wsheet,currentrow,8,whtstr),nfont,false,"");

		ttos = ""; // total o/s
		if(!wop[6].equals("")) ttos = nf2.format(Float.parseFloat(wop[6]) + intrc);
		POI_CellSetAllBorders(wwb,excelInsertNumber(wsheet,currentrow,6,ttos),wfont,true,"");
		//excelInsertString(wsheet,currentrow,6,ttos);

		rowcounter++;

		if(i == page_break) { pgbreakd = true; wsheet.setRowBreak(currentrow); }
		if(i > page_break)
			if(( (i+page_break) % page2_break) == 0)
			{
				pgbreakd = true;
				wsheet.setRowBreak(currentrow);
			}

		if(pgbreakd) // re-gen header-row - copy from first header
		{
			//org.apache.poi.hssf.usermodel.HSSFRow hdrow = wsheet.createRow(rowcounter+pgadder);
			// TODO mod here if template change

			for(ci=0;ci<9;ci++)
			{
				Cell hdcell = mainhdrow.getCell(ci);
				hdstr = POI_GetCellContentString(hdcell,evaluator,"#").trim();
				jhdc = excelInsertString(wsheet,rowcounter+pgadder,ci,hdstr);
				//POI_CellSetAllBorders(wwb,jhdc,wfont,true);
				jhdc.setCellStyle(hdcell.getCellStyle());
			}
			rowcounter++;
		}

		// do those 0-30 days and etc group-calcs
		if(!wop[6].equals(""))
		{
			ktos = Float.parseFloat(ttos);
			kck = wop[0].trim().toUpperCase();
			//if(wop[0].equals("Unadjusted credits")) { unadjcred += ktos; ktos = 0; }
			// 08/01/2013: check for "ON-ACCOUNT"
			if(kck.equals("UNADJUSTED CREDITS") || kck.equals("ON-ACCOUNT") ) { unadjcred += ktos; ktos = 0; }

			if(dydff <= 0)
			{
				sumundef += ktos;
			}

			if(dydff < 31 && dydff >= 0) sum0_30 += ktos;
			//if(ktos < 0) ktos = ktos * -1;

			if(dydff > 30 && dydff < 61) sum31_60 += ktos;
			if(dydff > 60 && dydff < 91) sum61_90 += ktos;
			if(dydff > 90 && dydff < 121) sum91_120 += ktos;
			if(dydff > 120 && dydff < 151) sum121_150 += ktos;
			if(dydff > 150) sum150_on += ktos;
		}
	}
	//debugbox.setValue(debugbox.getValue() + "\nD> wop[2] duedate : " + i.toString() );

	rowcounter++;
	totalrw = pgadder + rowcounter;
	Font tfont = wwb.createFont();
	tfont.setFontHeightInPoints((short)9);
	tfont.setFontName("Arial");
	tfont.setBoldweight(Font.BOLDWEIGHT_BOLD);

	// put TOTAL row
	mergs = "A" + (totalrw + 1).toString() + ":B" + (totalrw + 1).toString();
	CellRangeAddress region = CellRangeAddress.valueOf(mergs);
	wsheet.addMergedRegion(region);

/*	alert(soa_inv_total + " : " + soa_recp_total + " : " +
nf2.format( Float.parseFloat(soa_balance_total)*-1)  + " : " + totalinterest.toString() + " : " + 
nf2.format( Float.parseFloat(soa_balance_total)*-1 + totalinterest) 
); */

	POI_CellSetAllBorders(wwb,excelInsertString(wsheet,totalrw,0,"TOTAL"),tfont,true,"");
	POI_CellSetAllBorders(wwb,excelInsertString(wsheet,totalrw,1,""),tfont,true,"");

	if(soa_balance_total.equals("")) soa_balance_total = "0";

	POI_CellSetAllBorders(wwb,excelInsertNumber(wsheet,totalrw,2,soa_inv_total.toString()),tfont,true,"");
	POI_CellSetAllBorders(wwb,excelInsertNumber(wsheet,totalrw,3,soa_recp_total.toString()),tfont,true,"");
	POI_CellSetAllBorders(wwb,excelInsertNumber( wsheet,totalrw,4,nf2.format( Float.parseFloat(soa_balance_total)*-1)),tfont,true,"");
	POI_CellSetAllBorders(wwb,excelInsertNumber(wsheet,totalrw,5,totalinterest.toString()),tfont,true,"");
	POI_CellSetAllBorders(wwb,excelInsertNumber(wsheet,totalrw,6,
		nf2.format( Float.parseFloat(soa_balance_total)*-1 + totalinterest)),tfont,true,"");

	// insert those 0-30 days and so on at the end of the SOA
	//debugbox.setValue(debugbox.getValue() + "\nD> insert -30days" );

	rowcounter += 2;
	totalrw = pgadder + rowcounter;
	nxttotalrw = totalrw + 1;
	dyclm = 0;

	// 14/11/2013: req by Tony, include undefined/future-aged amount
	// 21/11/2013: agreed by CC, put as "Unadjusted credits" instead of "UNDEFINED"
	POI_CellSetAllBorders(wwb,excelInsertString(wsheet,totalrw,dyclm,"UNADJUSTED CREDITS"),tfont,true,"");
	POI_CellSetAllBorders(wwb,excelInsertNumber(wsheet,nxttotalrw,dyclm, nf2.format(unadjcred * -1) ),tfont,true,"");

	POI_CellSetAllBorders(wwb,excelInsertString(wsheet,totalrw,dyclm+1,"0-30 Days"),tfont,true,"");
	POI_CellSetAllBorders(wwb,excelInsertNumber(wsheet,nxttotalrw,dyclm+1,sum0_30.toString()),tfont,true,"");

	POI_CellSetAllBorders(wwb,excelInsertString(wsheet,totalrw,dyclm+2,"31-60 Days"),tfont,true,"");
	POI_CellSetAllBorders(wwb,excelInsertNumber(wsheet,nxttotalrw,dyclm+2,sum31_60.toString()),tfont,true,"");

	POI_CellSetAllBorders(wwb,excelInsertString(wsheet,totalrw,dyclm+3,"61-90 Days"),tfont,true,"");
	POI_CellSetAllBorders(wwb,excelInsertNumber(wsheet,nxttotalrw,dyclm+3,sum61_90.toString()),tfont,true,"");

	POI_CellSetAllBorders(wwb,excelInsertString(wsheet,totalrw,dyclm+4,"91-120 Days"),tfont,true,"");
	POI_CellSetAllBorders(wwb,excelInsertNumber(wsheet,nxttotalrw,dyclm+4,sum91_120.toString()),tfont,true,"");

	POI_CellSetAllBorders(wwb,excelInsertString(wsheet,totalrw,dyclm+5,"121-150 Days"),tfont,true,"");
	POI_CellSetAllBorders(wwb,excelInsertNumber(wsheet,nxttotalrw,dyclm+5,sum121_150.toString()),tfont,true,"");

	POI_CellSetAllBorders(wwb,excelInsertString(wsheet,totalrw,dyclm+6,"Over 150 Days"),tfont,true,"");
	POI_CellSetAllBorders(wwb,excelInsertNumber(wsheet,nxttotalrw,dyclm+6,sum150_on.toString()),tfont,true,"");

	kktot = (sum0_30 + sum31_60 + sum61_90 + sum91_120 + sum121_150 + sum150_on) - unadjcred;
	POI_CellSetAllBorders(wwb,excelInsertString(wsheet,totalrw,dyclm+7,"TOTAL"),tfont,true,"");
	POI_CellSetAllBorders(wwb,excelInsertNumber(wsheet,nxttotalrw,dyclm+7,kktot.toString()),tfont,true,"");

	duetotal = sum31_60 + sum61_90 + sum91_120 + sum121_150 + sum150_on;
	duestr = "REMINDER:\nWe would like to bring to your attention that your account of RM" + nf3.format(duetotal) +
	" has exceeded the due date.\nWe hope to receive your payment within 14 days from the date of this statement " +
	"to avoid service suspension.\nPlease ignore this reminder if payment has been made.";
	excelInsertString(wsheet,1,5,duestr);

	if(compname.length() > 15) compname = compname.substring(0,15).trim();
	compname = compname.replaceAll(" ","_");
	//compname = compname.replaceAll("\\","_");
	compname = compname.replaceAll("/","_");

	DateFormat fndfmt = new SimpleDateFormat("MMMyyyy");
	kdte = fndfmt.format(statement_date.getValue());

	tfname = compname + "_SOA_" + kdte + ".xls";
	outfn = session.getWebApp().getRealPath("tmp/" + tfname); // TODO create some meaningful filename
	FileOutputStream fileOut = new FileOutputStream(outfn);
	wwb.write(fileOut);
	fileOut.close();

	glob_processed_filename = outfn; // for later usage
	generated_lbl.setValue(tfname);

	// 14/11/2013: save a copy of the SOA by customer-id
	// global_selected_customerid set when user select a customer from popup
	saveFileToDMS( FC6CUST_PREFIX + global_selected_customerid, tfname, outfn, "application/vnd.ms-excel","xls" );

	fillDocumentsList_2(documents_holder,FC6CUST_PREFIX,global_selected_customerid);

	//downloadFile(kasiexport,tfname,outfn); // rwsqlfuncs.zs TODO need to move this
	upload_filename.setValue(""); // once gen, imported worksheet cleared
}

void generateExcelSOA2(int itype)
{
}

int calcDayDiff(java.util.Date id1, java.util.Date id2)
{
	try
	{
	long diff = id2.getTime() - id1.getTime();
	long diffDays = diff / (24 * 60 * 60 * 1000);
	return (int)diffDays;
	}
	catch (Exception e) { return 0; }
}


]]>
</zscript>

<popup id="email_pop">
<div style="background:#f9b12d;-moz-box-shadow: 4px 5px 7px #000000;-webkit-box-shadow: 4px 5px 7px #000000;
	box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px" width="450px" >

<grid>
	<rows>
		<row>
			<label value="Subject" />
			<textbox id="emailsubj_tb" width="99%" />
		</row>
		<row spans="2">
			<label value="Email message" />
		</row>
		<row spans="2">
			<textbox id="emailmsg_tb" multiline="true" width="99%" height="60px" />
		</row>
	</rows>
</grid>
<separator height="2px" />
<button id="realemaildoc_b" label="Send attachments and email-message" onClick="doFunc(self)" />
</div>
</popup>

<popup id="pickcustomer_popup">
<div style="background:#f9b12d;-moz-box-shadow: 4px 5px 7px #000000;-webkit-box-shadow: 4px 5px 7px #000000;
	box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px">
<hbox>
	<label style="font-size:9px">Customer name</label>
	<textbox id="searchcust_tb" style="font-size:9px" />
	<button label="Find" style="font-size:9px" onClick="findCustomers()" />
</hbox>
<separator height="2px" />
<hbox>
	<div id="foundcusts_holder" width="400px" />
	<separator width="5px" />
	<div width="400px" id="custfound_wa" visible="false" >
		<label id="fcustomername" style="font-size:13px;font-weight:bold;text-decoration:underline" />
		<separator height="2px" />
		<label id="fcustomerdetails" multiline="true" width="99%" height="100px" style="font-weight:bold" />
		<separator height="3px" />
		<button label="Select this customer" style="font-size:9px" onClick="assignCustomer()" />
	</div>
</hbox>
<label id="selectcustid" visible="false" />
</div>
</popup> <!-- ENDOF pickcustomer_popup -->

<!-- update file description popup -->
<popup id="updatefiledesc_popup">
<groupbox width="400px">
	<caption id="updatefiledesc_label" />
	<label value="Description" style="font-size:9px" />
	<textbox id="update_file_description" multiline="true" height="70px" width="99%" style="font-size:9px" />
	<separator height="3px" />
	<hbox>
		<button label="Update" style="font-size:9px" onClick="updateFileDescription(documents_holder,FC6CUST_PREFIX,global_selected_customerid)" />
		<button label="Close" style="font-size:9px" onClick="updatefiledesc_popup.close()" />
	</hbox>
</groupbox>
</popup>

<!-- upload a file popup -->
<popup id="uploadfile_popup">
<groupbox>
<caption label="Upload a file" />
	<grid>
		<rows>
			<row>
				<label value="Filename" style="font-size:9px" />
				<textbox id="fileupl_file_title" width="200px" style="font-size:9px" />
			</row>
			<row>
				<label value="Description" style="font-size:9px" />
				<textbox id="fileupl_file_description" multiline="true" height="60px" width="200px" style="font-size:9px" />
			</row>
		</rows>
	</grid>
</groupbox>
<separator height="3px" />
<hbox>
	<button label="Select file" onClick="uploadFile(documents_holder,FC6CUST_PREFIX,global_selected_customerid)" style="font-size:9px" />
	<button label="Close" onClick="uploadfile_popup.close()"  style="font-size:9px" />
</hbox>
</popup>

<style>

.subhead2 {
	font-size:24px;
	font-weight:bold;
	text-shadow: 1px 1px #000000;
}

.subhead1 {
	font-size:18px;
	font-weight:bold;
	text-shadow: 1px 1px #000000;
}

</style>


<div width="1200px">
<panel id="${MYPANEL}" title="${MYTITLE} ${MYVERSION}" border="normal" collapsible="true" closable="true" >
<panelchildren>

<div style="background:#1b528c; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
	box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px" >

<hbox>
	<button id="selcustomer_b" label="Select customer" onClick="pickcustomer_popup.open(self)" />
	<button id="uploadsoa_b" label="Upload SOA from FOCUS6" onClick="doFunc(self)" />
	<button id="gensoa_narr_b" label="Gen SOA with narration" onClick="doFunc(self)" />
	<button id="gensoa_nonarr_b" label="Gen SOA without narration" onClick="doFunc(self)" />
</hbox>
<separator height="5px" />
<hbox>
<grid width="500px">
	<rows>
		<row>
			<label value="Interest rate" />
			<label id="customer_interest" />
			<label>Statement date</label>
			<datebox id="statement_date" format="yyyy-MM-dd" onCreate="self.value = new java.util.Date()" />
		</row>
		<row>
			<label value="Uploaded file" />
			<label id="upload_filename" />
			<label>Generated</label>
			<label id="generated_lbl" style="text-decoration:blink" />
		</row>
	</rows>
</grid>

</hbox>

<separator height="10px" />

<div style="background:#e58512;padding:2px">
<label id="customername" sclass="subhead1" style="color:#ffffff" />
</div>
<separator height="3px" />

<hbox>

<div style="background:#555753; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px">
	<label sclass="subhead1" style="color:#ffffff">ATTACHMENT / DOCUMENTS</label>
	<separator height="3px" />
	<hbox>
		<button id="viewdoc_btn" label="View file" style="font-size:9px" onClick="viewFile()" />
		<button id="deletedoc_btn" label="Delete" style="font-size:9px"
			onClick="deleteFile(documents_holder,FC6CUST_PREFIX,global_selected_customerid)" />
	</hbox>
	<separator height="3px" />
	<div id="documents_holder" width="550px" />
</div>

<div style="background:#555753; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px">

	<label sclass="subhead1" style="color:#ffffff" value="Contact Person" />
	<separator height="3px" />
	<button id="emaildoc_b" label="Email document to selected contact-persons" onClick="doFunc(self)" />
	<separator height="3px" />

	<div id="extconts_holder" width="600px" />

</div>

</hbox>

</div>

<label id="debugbox" multiline="true" />

<div id="kasiexport" visible="false" />

<zscript>
<![CDATA[

kiboo.setTodayDatebox(statement_date);

]]>
</zscript>
</panelchildren>
</panel>
</div>
</zk>

