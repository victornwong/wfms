<?xml version="1.0" encoding="UTF-8"?>
<?page id="localrma_mod"?>
<zk>
<zscript src="../rwglobal/rwglobaldefs.zs" />
<zscript src="../rwglobal/rwsqlfuncs.zs" />
<zscript>
<![CDATA[
MYTITLE = "Local RMA";
MYVERSION = "v0.1";
MY_ID = "lclrma1";
/*
Title		: Manage local RMA
Written by	: Victor Wong
Dated		: 15/07/2013
NOTES:
*/

import org.victor.*;
sechand = new SecurityFuncs();
myincludeid = Executions.getCurrent().getParameter("myid");
useraccessobj = sechand.getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);
kiboo = new Generals();
sqlhand = new SqlFuncs();
lbhand = new ListboxHandler();
guihand = new GuiFuncs();
luhand = new LookupFuncs();
gridhand = new GridHandler();

Object customer_record = null;
prm_customerid = Executions.getCurrent().getParameter("ci");
glob_customer_name = "";
glob_selected_rma = "";
glob_rma_status = "";
glob_selected_ticket = "";

// TODO moved into listboxhandler.java
Listcell insertLB_Label(Listitem iparent, String iwhat, String istyle, String iid)
{
	Listcell lcell = new Listcell();
	lcell.setLabel(iwhat);
	lcell.setStyle(istyle);
	lcell.setParent(iparent);
	if(!iid.equals("")) svid.setId(iid);
	return lcell;
}

void toggleRMA_items_butts(boolean iwhat)
{
	assvrma_b.setDisabled(iwhat);
	remrmai_b.setDisabled(iwhat);
	updrmai_b.setDisabled(iwhat);
}

Object[] tkslb_headers =
{
	new listboxHeaderWidthObj("CSV#",true,"60px"),
	new listboxHeaderWidthObj("Dated",true,"65px"),
	new listboxHeaderWidthObj("AssetTag",true,"80px"),
	new listboxHeaderWidthObj("Priority",true,"60px"),
	new listboxHeaderWidthObj("RMA#",true,"60px"),
};

class tkslbClick implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		//glob_selected_ticket = lbhand.getListcellItemLabel(isel,0);
		//showTicketMetadata(glob_selected_ticket);
	}
}

// List CSV by fc6_custid - Make only tickets without rma_id selectable
void showTickets()
{
	Listbox newlb = lbhand.makeVWListbox_Width(tickets_holder, tkslb_headers, "tickets_lb", 9);

	// show tickets by customer and status=OPEN. NEW and CLOSE ticket, cannot do anything..
	sqlstm = "select origid,calldatetime,priority,asset_tag,rma_id from rw_helptickets " +
	"where fc6_custid='" + prm_customerid + "' and tstatus = 'OPEN' order by origid desc";

	screcs = sqlhand.gpSqlGetRows(sqlstm);
	if(screcs.size() == 0) return;

	newlb.setCheckmark(true);
	newlb.setMultiple(true);
	newlb.addEventListener("onSelect", new tkslbClick());

	for(dpi : screcs)
	{
		ArrayList kabom = new ArrayList();
		kabom.add(dpi.get("origid").toString());
		kabom.add(dpi.get("calldatetime").toString().substring(0,10));
		kabom.add(kiboo.checkNullString(dpi.get("asset_tag")));
		kabom.add(kiboo.checkNullString(dpi.get("priority")));
		//kabom.add(kiboo.checkNullString(dpi.get("tstatus")));
		rmaid = (dpi.get("rma_id") == null) ? "" : dpi.get("rma_id").toString();
		kabom.add(rmaid);
		strarray = kiboo.convertArrayListToStringArray(kabom);	
		lbitm = lbhand.insertListItems(newlb,strarray,"false","");
		if(!rmaid.equals("")) lbitm.setDisabled(true);
	}
}

void showRMA_items(String irma)
{
	lbhand.makeVWListbox_Width(rmaitems_holder, rmaitemlb_headers, "rmaitems_lb", 5);
	rmaitems_lb.setMultiple(true);
	rmaitems_lb.setCheckmark(true);

	sqlstm = "select helpticket_id from rw_localrma_items where parent_id=" + irma;
	rmis = sqlhand.gpSqlGetRows(sqlstm);
	if(rmis.size() == 0) return;
	for(ki : rmis)
	{
		insertRMA_LBitem(ki.get("helpticket_id").toString());
	}
}

Object[] rmalb_headers =
{
	new listboxHeaderWidthObj("RMA#",true,"40px"),
	new listboxHeaderWidthObj("Dated",true,"65px"),
	new listboxHeaderWidthObj("Priority",true,"60px"),
	new listboxHeaderWidthObj("Status",true,"60px"),
	new listboxHeaderWidthObj("Pickup",true,"60px"),
	new listboxHeaderWidthObj("PickDt",true,"60px"),
	new listboxHeaderWidthObj("Complt",true,"60px"),
};

void showRMA_metadata(String irma)
{
	rmr = getLocalRMA_rec(irma);
	lbhand.matchListboxItems(l_priority,kiboo.checkNullString(rmr.get("priority")));
	l_delivery_addr.setValue(kiboo.checkNullString(rmr.get("delivery_addr")));
	l_notes.setValue(kiboo.checkNullString(rmr.get("rma_notes")));
	l_createdby.setValue(kiboo.checkNullString(rmr.get("createdby")));
}

class rmalbClick implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		// Save prev, if any and local-rma is draft
		if(glob_rma_status.equals("DRAFT"))
		{
			doFunc(updrma_b);
			saveRMA_Items(glob_selected_rma);
		}

		isel = event.getReference();
		glob_selected_rma = lbhand.getListcellItemLabel(isel,0);
		glob_rma_status = lbhand.getListcellItemLabel(isel,3);

		btst = (glob_rma_status.equals("DRAFT")) ? false : true;
		disableButts(btst); // if local-rma not new, disable those butts

		l_origid.setValue(glob_selected_rma);
		showTickets();
		showRMA_metadata(glob_selected_rma);
		showRMA_items(glob_selected_rma);
	}
}

void showLocalRMA()
{
	Listbox newlb = lbhand.makeVWListbox_Width(rmas_holder, rmalb_headers, "rma_lb", 10);

	sqlstm = "select origid,datecreated,createdby,rstatus,priority,pickupby,pickupdate,completed from rw_localrma " +
	"where fc6_custid='" + prm_customerid + "' order by origid desc";

	screcs = sqlhand.gpSqlGetRows(sqlstm);
	if(screcs.size() == 0) return;

	newlb.setRows(20);
	newlb.setMold("paging");
	newlb.addEventListener("onSelect", new rmalbClick());

	for(dpi : screcs)
	{
		ArrayList kabom = new ArrayList();
		kabom.add(dpi.get("origid").toString());
		kabom.add(dpi.get("datecreated").toString().substring(0,10));
		tprio = kiboo.checkNullString(dpi.get("priority"));
		kabom.add(tprio);
		kabom.add(kiboo.checkNullString(dpi.get("rstatus")));
		kabom.add(kiboo.checkNullString(dpi.get("pickupby")));
		kabom.add(kiboo.checkNullDate(dpi.get("pickupdate"),""));
		kabom.add(kiboo.checkNullDate(dpi.get("completed"),""));
		strarray = kiboo.convertArrayListToStringArray(kabom);

		mysty = "";
		if(tprio.equals("CRITICAL")) mysty = "font-size:9px;" + CRITICAL_BACKGROUND;
		if(tprio.equals("URGENT")) mysty = "font-size:9px;" + URGENT_BACKGROUND;

		lbhand.insertListItems(newlb,strarray,"false",mysty);
	}
}

void insertRMA_LBitem(String icsv)
{
	tkr = getHelpTicket_rec(icsv);
	if(tkr == null) { guihand.showMessageBox("ERR: cannot access database"); return; }

	Listitem litem = new Listitem();

	insertLB_Label(litem,icsv,"font-size:9px","");
	insertLB_Label(litem,kiboo.checkNullString(tkr.get("asset_tag")),"font-size:9px","");

	Listcell lcell = new Listcell();	
	Grid igrid = new Grid();
	mrows = gridhand.gridMakeRows("","",igrid);
	
	prow = gridhand.gridMakeRow("","","",mrows);
	gridhand.makeLabelToParent("Product", "font-size:9px",prow);
	gridhand.makeLabelToParent(kiboo.checkNullString(tkr.get("product_name")), "font-size:9px",prow);
	
	prow = gridhand.gridMakeRow("","","",mrows);
	gridhand.makeLabelToParent("Problem", "font-size:9px",prow);
	gridhand.makeTextboxToParent(kiboo.checkNullString(tkr.get("problem")),"font-size:9px","99%","30px",true,prow);
	
	prow = gridhand.gridMakeRow("","","",mrows);
	gridhand.makeLabelToParent("Action", "font-size:9px",prow);
	gridhand.makeTextboxToParent(kiboo.checkNullString(tkr.get("action")),"font-size:9px","99%","30px",true,prow);
	
	prow = gridhand.gridMakeRow("","","",mrows);
	gridhand.makeLabelToParent("Prod.Notes", "font-size:9px",prow);
	gridhand.makeLabelMultilineToParent("", "font-size:9px",prow);

	igrid.setParent(lcell);
	lcell.setParent(litem);

	litem.setParent(rmaitems_lb);
}

// Save those RMA items and details
void saveRMA_Items(String irma)
{
	if(irma.equals("")) return;

	// remove all rma-items before inserting new
	sqlstm = "delete from rw_localrma_items where parent_id=" + irma + ";";

	rmais = rmaitems_lb.getItems();

	for(ri : rmais)
	{
		isv = lbhand.getListcellItemLabel(ri,0);
		iatg = lbhand.getListcellItemLabel(ri,1);

		iprob = ri.getChildren().get(2).getChildren().get(0).getChildren().get(0).getChildren().get(1).getChildren().get(1).getValue();
		iprob = kiboo.replaceSingleQuotes(iprob);

		iact = ri.getChildren().get(2).getChildren().get(0).getChildren().get(0).getChildren().get(2).getChildren().get(1).getValue();
		iact = kiboo.replaceSingleQuotes(iact);

		//alert(ri.getChildren().get(2).getChildren().get(0).getChildren().get(0).getChildren().get(0).getChildren().get(1).getValue());

		// insert current rma-items
		sqlstm += "insert into rw_localrma_items (parent_id,helpticket_id,asset_tag,problem,action,notes) values " +
		"(" + irma + "," + isv + ",'" + iatg + "','" + iprob + "','" + iact + "','');";

		// update rw_helptickets too
		sqlstm += "update rw_helptickets set rma_id=" + irma + ", action='" + iact + "', problem='" + iprob + "' where origid=" + isv + ";";
	}

	sqlhand.gpSqlExecuter(sqlstm);
	showTickets();
}

void doFunc(Object iwhat)
{
	itype = iwhat.getId();
	todaydate =  kiboo.todayISODateTimeString();
	sqlstm = "";
	refreshrmas = false;
	refreshtickets = false;
	msgtext = "";

	if(itype.equals("newrma_b"))
	{
		sqlstm = "insert into rw_localrma (datecreated,createdby,fc6_custid,rma_notes,rstatus,priority) values " +
		"('" + todaydate + "','" + useraccessobj.username + "','" + prm_customerid + "','','DRAFT','NORMAL')";
		refreshrmas = true;
	}

	if(itype.equals("assvrma_b")) // assign CSV to RMA 
	{
		if(tickets_lb.getSelectedCount() == 0) return;
		if(glob_selected_rma.equals("")) return;

		seltks = tickets_lb.getSelectedItems();
		instr = "";
		for(dpi : seltks)
		{
			icsv = lbhand.getListcellItemLabel(dpi,0);
			// check if already in RMA-items lb
			etms = rmaitems_lb.getItems();
			rtex = false;
			for(rti : etms)
			{
				ckl = lbhand.getListcellItemLabel(rti,0);
				if(icsv.equals(ckl)) { rtex = true; break; }
			}

			if(!rtex)
			{
				instr += icsv + ",";
				insertRMA_LBitem(icsv);
			}
		}

		if(!instr.equals(""))
		{
			instr = instr.substring(0,instr.length()-1);
			sqlstm = "update rw_helptickets set rma_id=" + glob_selected_rma + " where origid in (" + instr + ");";
			saveRMA_Items(glob_selected_rma);

			// get customer-address from tickets and put into RMA delivery address-box
			fillDeliveryAddress(instr);
		}
		refreshtickets = true;
	}

	if(itype.equals("remrmai_b")) // remove CSV from RMA
	{
		rmis = rmaitems_lb.getSelectedItems().toArray();
		rcc = rmaitems_lb.getSelectedCount();
		instr = "";
		for(i=0;i<rcc;i++)
		{
			isv = lbhand.getListcellItemLabel(rmis[i],0);
			rmaitems_lb.removeChild(rmis[i]);
			instr += isv + ",";
		}
		if(!instr.equals(""))
		{
			instr = instr.substring(0,instr.length()-1);
			sqlstm = "update rw_helptickets set rma_id=null where origid in (" + instr + ");";
			sqlstm += "delete from rw_localrma_items where helpticket_id in (" + instr + ") and parent_id=" + glob_selected_rma + ";";
		}

		refreshtickets = true;
	}

	if(itype.equals("updrma_b")) // update RMA details
	{
		if(glob_selected_rma.equals("")) return;
		lpri = l_priority.getSelectedItem().getLabel();
		ldela = kiboo.replaceSingleQuotes(l_delivery_addr.getValue());
		lnots = kiboo.replaceSingleQuotes(l_notes.getValue());
		sqlstm = "update rw_localrma set delivery_addr='" + ldela + "',priority='" + lpri + "',rma_notes='" + lnots + "' " +
		"where origid=" + glob_selected_rma;
		refreshrmas = true;
	}

	if(itype.equals("updrmai_b")) // update RMA items
	{
		saveRMA_Items(glob_selected_rma);
	}

	if(itype.equals("submitrma_b")) // submit local-RMA, lock it
	{
		if(glob_selected_rma.equals("")) return;
		if(!glob_rma_status.equals("DRAFT"))
		{
			guihand.showMessageBox("You can only commit DRAFT local-RMA..");
			return;
		}
		// RMA must contain some items to do..
		itmc = rmaitems_lb.getItemCount();
		if(itmc == 0)
		{
			msgtext = "Cannot commit empty RMA..";
		}
		else
		{
			sqlstm = "update rw_localrma set rstatus='COMMIT', commitdate='" + todaydate + "' where origid=" + glob_selected_rma;
			refreshrmas = true;
			disableButts(true);
			sendLocalRMA_noti(glob_selected_rma);
			msgtext = "Local-RMA committed and notification email sent to production..";
			// TODO send notification to production
		}
	}

	if(itype.equals("printrma_b")) // print out something
	{
	}

	if(itype.equals("renotiprob_b")) // resend noti-email to production if rma not done
	{
		sendLocalRMA_noti(glob_selected_rma);
		msgtext = "Re-notification email sent..";
	}

	if(itype.equals("cancelrma_b")) // cancel local-RMA check/open popup
	{
		if(glob_selected_rma.equals("")) return;
		cancelrma_pop.open(iwhat);
	}

	if(itype.equals("realcancelrma_b")) // really cancel the local-rma
	{
		cancelrma_pop.close();
		rmauser = l_createdby.getValue();
		if(!rmauser.equals(useraccessobj.username))
		{
			guihand.showMessageBox("You are not the owner of this local-RMA, not allowed to cancel..");
			return;
		}
		if(glob_selected_rma.equals("")) return;
		canrs = kiboo.replaceSingleQuotes(canceltick_reason.getValue());
		if(canrs.equals("")) return;

		// TODO if rma-submitted, check DO or whatever things - production/warehouse might already done/shipped-out
		sqlstm = "update rw_localrma set rstatus='CANCEL', canceldate='" + todaydate + "' where origid=" + glob_selected_rma + ";";

		// Remove CSVs from local-rma
		rmis = rmaitems_lb.getItems().toArray();
		rcc = rmaitems_lb.getItemCount();
		instr = "";
		for(i=0;i<rcc;i++)
		{
			isv = lbhand.getListcellItemLabel(rmis[i],0);
			rmaitems_lb.removeChild(rmis[i]);
			instr += isv + ",";
		}
		if(!instr.equals(""))
		{
			instr = instr.substring(0,instr.length()-1);
			sqlstm += "update rw_helptickets set rma_id=null where origid in (" + instr + ");";
			sqlstm += "delete from rw_localrma_items where helpticket_id in (" + instr + ") and parent_id=" + glob_selected_rma + ";";
		}

		refreshtickets = true;
		refreshrmas = true;
		msgtext = "Local-RMA CANCELLED";
		
		// TODO audit-log
	}

	if(!sqlstm.equals("")) sqlhand.gpSqlExecuter(sqlstm);
	if(refreshrmas) showLocalRMA();
	if(refreshtickets) showTickets();
	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
}

void disableButts(boolean iwhat)
{
	assvrma_b.setDisabled(iwhat);
	remrmai_b.setDisabled(iwhat);
	updrmai_b.setDisabled(iwhat);
}

// Send noti-email to production or whoever
void sendLocalRMA_noti(String ilrma)
{
// LOCALRMA_PREFIX
}

void adminFunc(Object iwhat)
{
	itype = iwhat.getId();
	todaydate =  kiboo.todayISODateTimeString();
	sqlstm = "";
	refreshrmas = false;
	refreshtickets = false;
	msgtext = "";

	if(itype.equals("chgdraft_b")) // chg local-rma to draft
	{
		if(glob_selected_rma.equals("")) return;
		sqlstm = "update rw_localrma set rstatus='DRAFT', commitdate=null where origid=" + glob_selected_rma;
		refreshrmas = true;
		disableButts(false);
	}

	if(!sqlstm.equals("")) sqlhand.gpSqlExecuter(sqlstm);
	if(refreshrmas) showLocalRMA();
	if(refreshtickets) showTickets();
	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);

	adminpop.close();
}

// fill l_delivery_addr from tickets' customer-location
void fillDeliveryAddress(String instr)
{
	sqlstm = "select distinct cust_location from rw_helptickets where origid in (" + instr + ")";
	delas = sqlhand.gpSqlGetRows(sqlstm);
	if(delas.size() == 0) return;
	delads = "";
	for(ki : delas)
	{
		delads += kiboo.checkNullString(ki.get("cust_location")) + "\n\n";
	}
	l_delivery_addr.setValue(delads);
}

Object[] rmaitemlb_headers =
{
	new listboxHeaderWidthObj("CSV#",true,"70px"),
	new listboxHeaderWidthObj("AssetTag",true,"70px"),
	new listboxHeaderWidthObj("Activity",true,""),
};

]]>
</zscript>

<window id="${MY_ID}" title="${MYTITLE} ${MYVERSION}" position="center" mode="overlapped" border="normal" sizable="true" closable="true">
<div width="1000px">

<popup id="cancelrma_pop">
<div style="background:#cc0000;
	-moz-box-shadow: 4px 5px 7px #000000;
	-webkit-box-shadow: 4px 5px 7px #000000;
	box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px">

<vbox>
	<label value="Cancel reason" style="color:#eeeeee" />
	<textbox id="canceltick_reason" width="250px" height="50px" multiline="true" />
	<button id="realcancelrma_b" label="CANCEL" onClick="doFunc(self)" />
</vbox>

</div>
</popup>

<popup id="adminpop">
	<button id="chgdraft_b" label="Chg DRAFT" style="font-size:9px" onClick="adminFunc(self)" />
</popup>

<hbox>
	<button id="newrma_b" label="New local RMA" style="font-size:9px" onClick="doFunc(self)" />
	<button id="submitrma_b" label="Commit" style="font-size:9px" onClick="doFunc(self)" />
	<button id="printrma_b" label="Print" style="font-size:9px" onClick="doFunc(self)" disabled="true" />
	<button id="renotiprob_b" label="Re-notify production" style="font-size:9px" onClick="doFunc(self)" />
	<button id="cancelrma_b" label="Cancel RMA" style="font-size:9px" onClick="doFunc(self)" />
	<button id="admin_b" label="ADMIN" style="font-size:9px;color:#ff0000" onClick="adminpop.open(self)" visible="false" />
</hbox>
<separator height="3px" />

<hbox>

<div id="rmas_holder" width="450px" />

<vbox>
	<div id="tickets_holder" />
	<hbox>
		<button id="assvrma_b" label="Assign CSV to RMA" style="font-size:9px" onClick="doFunc(self)" />
		<button id="remrmai_b" label="Remove from RMA" style="font-size:9px" onClick="doFunc(self)" />
		<button id="updrmai_b" label="Update RMA items" style="font-size:9px" onClick="doFunc(self)" />
	</hbox>
</vbox>

</hbox> <!-- ENDOF rmas_holder and tickets_holder -->

<separator height="3px" />

<div id="workarea">

<hbox>
<grid width="450px">
	<rows>
		<row style="background:#729fcf">
			<label value="RMA#" />
			<label id="l_origid" />
			<label value="Owner" />
			<label id="l_createdby" />
		</row>
		<row spans="1,3">
			<label value="Priority" style="font-size:9px" />
			<listbox id="l_priority" mold="select" style="font-size:9px" />
		</row>
		<row spans="1,3">
			<label value="Delivery Address" style="font-size:9px" />
			<textbox id="l_delivery_addr" style="font-size:9px" width="99%" height="60px" multiline="true" />
		</row>
		<row spans="1,3">
			<label value="Notes" style="font-size:9px" />
			<textbox id="l_notes" style="font-size:9px" width="99%" height="60px" multiline="true" />
		</row>
		<row spans="4">
			<hbox>
				<button id="updrma_b" label="Update details" style="font-size:9px" onClick="doFunc(self)" />
			</hbox>
		</row>
	</rows>
</grid>

<div id="rmaitems_holder"  />

</hbox>

</div> <!-- ENDOF workarea -->

</div>

<zscript>
<![CDATA[

// Close-window event -- save whatever
class closeWindowF implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		doFunc(updrma_b);
		saveRMA_Items(glob_selected_rma);
	}
}

if(prm_customerid == null) lclrma1.close();

customer_record = getFocus_CustomerRec(prm_customerid);
lclrma1.setTitle(lclrma1.getTitle() + " : " + customer_record.get("name"));
lclrma1.addEventListener("onClose", new closeWindowF());

luhand.populateListbox_ByLookup(l_priority, "PRIORITY_LISTS", 2);

if(useraccessobj.accesslevel == 9)
{
	admin_b.setVisible(true);
}

showLocalRMA();
showTickets();

]]>
</zscript>

</window>
</zk>

