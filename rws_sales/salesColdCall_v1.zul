<?xml version="1.0" encoding="UTF-8"?>
<?page id="salescoldcallm"?>
<zk>
<zscript src="../rwglobal/rwglobaldefs.zs" />
<zscript src="../rwglobal/formMaker_v1.zs" />
<zscript src="../rwglobal/rwsqlfuncs.zs" />
<zscript src="../rwglobal/uploadDocu_v1.zs" />
<zscript src="../rwglobal/emailfuncs.zs" />
<zscript src="../rwglobal/checkListHandler.zs" />
<zscript src="../rwglobal/uploadedWorksheet_v1.zs" />
<zscript>
<![CDATA[
MYTITLE = "Sales/Marketing Activities";
MYVERSION = "v0.1.2";
MYPANEL = "salcolcla";
/*
Written by	: Victor Wong
Dated		: 05/12/2013

Revisions:
10/03/2014: only James and Mandy can download cold-call listings

*/
import java.util.*;
import java.text.*;
import org.victor.*;
sechand = new SecurityFuncs();

myincludeid = Executions.getCurrent().getParameter("myid");
useraccessobj = sechand.getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);

kiboo = new Generals();
sqlhand = new SqlFuncs();
lbhand = new ListboxHandler();
guihand = new GuiFuncs();
luhand = new LookupFuncs();
dmshand = new DMSFuncs();

glob_current_user = glob_sel_acticont = glob_sel_activity = "";
glob_acticont_rec = glob_activ_rec = null;
last_loadcont = 0;

void showActiContactMeta(String iwhat)
{
	acr = getActivitiesContact_rec(iwhat);
	glob_acticont_rec = acr; // save for later
	if(acr == null) { guihand.showMessageBox("DBERR: Cannot access acti-contacts table.."); return; }

	cntp = kiboo.checkNullString(acr.get("contact_person"));
	titt = (cntp.indexOf("Ms") != -1) ? "Ms" : "Mr";
	lbhand.matchListboxItems( a_cont_temp, titt);
	cntp = cntp.replaceAll(titt + " ","");
	a_contact_person.setValue( cntp );

	Object[] ob = { a_cust_name, a_industry, a_designation, a_cust_address1, a_cust_address2, a_cust_address3, a_cust_address4,
	a_cust_tel, a_cust_fax, a_cust_email };

	String[] fl = { "cust_name", "industry", "designation", "cust_address1", "cust_address2", "cust_address3", "cust_address4",
	"cust_tel", "cust_fax", "cust_email" };

	populateUI_Data(ob, fl, acr);

	coldcd = sqlhand.clobToString(acr.get("coldcall_rec"));
	coldcallmform.wolipar.clearFormFieldsAll();
	if(coldcd != null) coldcallmform.populateFormValues(coldcd);

	fillDocumentsList(documents_holder,COLDCALL_PREFIX,iwhat);

	lbhand.matchListboxItems( a_coldcdv, kiboo.checkNullString(acr.get("call_div")) );
	workarea.setVisible(true);
}

Object[] actconthds =
{
	new listboxHeaderWidthObj("origid",false,""),
	new listboxHeaderWidthObj("Customer",true,""),
	new listboxHeaderWidthObj("ContactP",true,""),
	new listboxHeaderWidthObj("Tel",true,""),
	new listboxHeaderWidthObj("Email",true,""),
	new listboxHeaderWidthObj("Industry",true,""),
	new listboxHeaderWidthObj("User",true,"60px"),
	new listboxHeaderWidthObj("Class",true,"70px"),
	new listboxHeaderWidthObj("Divs",true,"70px"),
};

class acticontclk implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		glob_sel_acticont = lbhand.getListcellItemLabel(isel,0);
		showActiContactMeta(glob_sel_acticont);
		listActivities(glob_sel_acticont);
	}
}
acticontclkier = new acticontclk();

// itype: 1=list all, 2=list by username
void listActiContacts(int itype, String iusername)
{
/*
	scht = kiboo.replaceSingleQuotes(searhtxt_tb.getValue()).trim();
	sdate = kiboo.getDateFromDatebox(startdate);
    edate = kiboo.getDateFromDatebox(enddate);
*/
	last_loadcont = itype;
	Listbox newlb = lbhand.makeVWListbox_Width(acticonts_holder, actconthds, "acticonts_lb", 20);

	sqlstm = "select origid,cust_name,potential,username,industry,deleted," +
	"contact_person,cust_tel,cust_email,call_div from rw_activities_contacts ";
	byusr = (itype == 2) ? "where username='" + iusername + "' order by cust_name" : "";
	sqlstm += byusr;

	recs = sqlhand.gpSqlGetRows(sqlstm);
	if(recs.size() == 0) return;
	newlb.setMold("paging");
	newlb.addEventListener("onSelect", acticontclkier );
	ArrayList kabom = new ArrayList();
	for(d : recs)
	{
		kabom.add( d.get("origid").toString() );
		cstn = kiboo.checkNullString( d.get("cust_name") );
		if(cstn.equals("")) cstn = "NEW CUSTOMER";
		kabom.add( cstn );
		kabom.add( kiboo.checkNullString(d.get("contact_person")) );
		kabom.add( kiboo.checkNullString(d.get("cust_tel")) );
		kabom.add( kiboo.checkNullString(d.get("cust_email")) );
		kabom.add( kiboo.checkNullString(d.get("industry")) );
		kabom.add( kiboo.checkNullString(d.get("username")) );
		kabom.add( kiboo.checkNullString(d.get("potential")) );
		kabom.add( kiboo.checkNullString(d.get("call_div")) );
		dlt = (d.get("deleted") == null) ? "" : (d.get("deleted")) ? "font-size:9px;text-decoration:line-through;opacity:0.6;" : "";

		lbhand.insertListItems(newlb,kiboo.convertArrayListToStringArray(kabom),"false",dlt);
		kabom.clear();
	}
}

void contFunc(Object iwhat)
{
	itype = iwhat.getId();
	todaydate =  kiboo.todayISODateTimeString();
	refresh = false;
	sqlstm = msgtext = "";
	//lnkc = QUOTE_PREFIX + glob_sel_quote;

	if(itype.equals("newcontact_b"))
	{
		sqlstm = "insert into rw_activities_contacts (username,datecreated,potential,deleted,cust_name) values " +
		"('" + useraccessobj.username + "','" + todaydate + "','NEW',0,'NEW CUSTOMER')";

		refresh = true;
	}

	if(itype.equals("updatecont_b"))
	{
		if(glob_sel_acticont.equals("")) return;

		Object[] ob = { a_cust_name, a_industry, a_designation, a_cust_address1, a_cust_address2, a_cust_address3, a_cust_address4,
		a_cust_tel, a_cust_fax, a_cust_email, a_coldcdv };

		dt = getString_fromUI(ob);
		cntn = a_cont_temp.getSelectedItem().getLabel() + " " + kiboo.replaceSingleQuotes(a_contact_person.getValue().trim());

		sqlstm = "update rw_activities_contacts set cust_name='" + dt[0] + "', industry='" + dt[1] + "'," +
		"designation='" + dt[2] + "',cust_address1='" + dt[3] + "',cust_address2='" + dt[4] + "'," +
		"cust_address3='" + dt[5] + "', cust_address4='" + dt[6] + "', cust_tel='" + dt[7] + "', cust_fax='" + dt[8] + "'," +
		"cust_email='" + dt[9] + "',call_div='" + dt[10] + "',contact_person='" + cntn + "' where origid=" + glob_sel_acticont;

		refresh = true;
	}

	if(itype.equals("dnusecontact_b")) // mark a contact as DO NOT USE / deleted flag
	{
		if(glob_sel_acticont.equals("")) return;
		sqlstm = "update rw_activities_contacts set deleted=1-deleted where origid=" + glob_sel_acticont;
		refresh = true;
	}

	if(itype.equals("savecoldcall_b")) // save cold-call records
	{
		if(glob_sel_acticont.equals("")) return;
		coldcr = coldcallmform.freezeFormValues();
		sqlstm = "update rw_activities_contacts set coldcall_rec='" + coldcr + "' where origid=" + glob_sel_acticont;
		msgtext = "Cold-call data saved..";
	}

	if(!sqlstm.equals("")) sqlhand.gpSqlExecuter(sqlstm);
	if(refresh) listActiContacts(last_loadcont,glob_current_user);
	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
}

void showActivityMeta(String iwhat)
{
	rcs = getActivity_rec(iwhat);
	glob_activ_rec = rcs; // use later
	if(rcs == null) { guihand.showMessageBox("DBERR: Cannot access activity-table!!"); return; }

	Object[] ob = { o_contact_person, o_designation, o_telephone, o_email, o_act_type, o_act_notes };
	String[] fl = { "contact_person", "designation", "telephone", "email", "act_type", "act_notes" };

	populateUI_Data(ob,fl,rcs);
/*
	o_contact_person.setValue( kiboo.checkNullString(rcs.get("contact_person")) );
	lbhand.matchListboxItems(o_designation, kiboo.checkNullString(rcs.get("designation")) );
	o_telephone.setValue( kiboo.checkNullString(rcs.get("telephone")) );
	o_email.setValue( kiboo.checkNullString(rcs.get("email")) );
	lbhand.matchListboxItems(o_act_type, kiboo.checkNullString(rcs.get("act_type")) );
	o_act_notes.setValue( kiboo.checkNullString(rcs.get("act_notes")) );
*/
}

Object[] actihds =
{
	new listboxHeaderWidthObj("origid",false,""),
	new listboxHeaderWidthObj("Dated",true,"70px"),
	new listboxHeaderWidthObj("Contact",true,""),
	new listboxHeaderWidthObj("Designation",true,"100px"),
	new listboxHeaderWidthObj("Type",true,"80px"),
	new listboxHeaderWidthObj("User",true,"80px"),
};

class activiclk implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		glob_sel_activity = lbhand.getListcellItemLabel(isel,0);
	}
}
activityclker = new activiclk();

class activiDclk implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getTarget();
		glob_sel_activity = lbhand.getListcellItemLabel(isel,0);
		showActivityMeta(glob_sel_activity);
		updateactiv_pop.open(isel);
	}
}
activityDclker = new activiDclk();

void listActivities(String ilnk)
{
	Listbox newlb = lbhand.makeVWListbox_Width(actis_holder, actihds, "activities_lb", 5);
	sqlstm = "select origid,datecreated,contact_person,designation," + 
	"act_type,username,act_notes from rw_activities where parent_id=" + ilnk;

	recs = sqlhand.gpSqlGetRows(sqlstm);
	if(recs.size() == 0) return;
	// newlb.setMultiple(true);
	newlb.setRows(22);
	newlb.setMold("paging");
	newlb.addEventListener("onSelect", activityclker );
	ArrayList kabom = new ArrayList();
	for(d : recs)
	{
		kabom.add( d.get("origid").toString() );
		kabom.add( (d.get("datecreated") == nulglob_sel_activityl) ? "" : dtf2.format(d.get("datecreated")) );
		kabom.add( kiboo.checkNullString(d.get("contact_person")) );
		kabom.add( kiboo.checkNullString(d.get("designation")) );
		kabom.add( kiboo.checkNullString(d.get("act_type")) );
		kabom.add( kiboo.checkNullString(d.get("username")) );
		kak = lbhand.insertListItems(newlb,kiboo.convertArrayListToStringArray(kabom),"false","");
		kak.setTooltiptext( kiboo.checkNullString(d.get("act_notes")) );
		kabom.clear();
	}
	lbhand.setDoubleClick_ListItems(newlb, activityDclker);
	glob_sel_activity = ""; // reset
}

void actiFunc(Object iwhat)
{
	itype = iwhat.getId();
	todaydate =  kiboo.todayISODateTimeString();
	refresh = false;
	sqlstm = msgtext = "";
	//lnkc = QUOTE_PREFIX + glob_sel_quote;

	if(itype.equals("realaddacti_b"))
	{
		if(glob_sel_acticont.equals("")) return;
		cpr = kiboo.replaceSingleQuotes(k_contact_person.getValue().trim());
		if(cpr.equals("")) return;
		tel = kiboo.replaceSingleQuotes(k_telephone.getValue().trim());
		eml = kiboo.replaceSingleQuotes(k_email.getValue().trim());
		nts = kiboo.replaceSingleQuotes(k_act_notes.getValue().trim());
		dsg = k_designation.getSelectedItem().getLabel();
		atp = k_act_type.getSelectedItem().getLabel();

		sqlstm = "insert into rw_activities (parent_id,datecreated,contact_person,telephone,email,act_notes," + 
		"designation,act_type,username) values " +
		"(" + glob_sel_acticont + ",'" + todaydate + "','" + cpr + "','" + tel + "','" + eml + "','" + nts + "','" + 
		dsg + "','" + atp + "','" + useraccessobj.username + "')";

		refresh = true;
		newacti_pop.close();
	}

	if(itype.equals("delacti_b"))
	{
		if(glob_sel_activity.equals("")) return;

		if (Messagebox.show("Hard delete this activity", "Are you sure?", 
			Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) !=  Messagebox.YES) return;

		sqlstm = "delete from rw_activities where origid=" + glob_sel_activity;
		refresh = true;
	}

	if(itype.equals("updatacti_b"))
	{
		if( glob_sel_acticont.equals("") || glob_sel_activity.equals("") ) return;
		cpr = kiboo.replaceSingleQuotes(o_contact_person.getValue().trim());
		if(cpr.equals("")) return;
		tel = kiboo.replaceSingleQuotes(o_telephone.getValue().trim());
		eml = kiboo.replaceSingleQuotes(o_email.getValue().trim());
		nts = kiboo.replaceSingleQuotes(o_act_notes.getValue().trim());
		dsg = o_designation.getSelectedItem().getLabel();
		atp = o_act_type.getSelectedItem().getLabel();
		
		sqlstm = "update rw_activities set contact_person='" + cpr + "',telephone='" + tel + "',email='" + eml + "'," +
		"act_notes='" + nts + "',designation='" + dsg + "',act_type='" + atp + "' where origid=" + glob_sel_activity;

		refresh = true;
		updateactiv_pop.close();
	}

	if(!sqlstm.equals("")) sqlhand.gpSqlExecuter(sqlstm);
	if(refresh) listActivities(glob_sel_acticont);
	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
}

void clearAddActiFields()
{
	Object[] acf = { k_contact_person, k_telephone, k_email, k_act_notes, k_designation, k_act_type };
	clearUI_Field(acf);
}

// Update contact's potential by using button-label
void setContactPotential(Object iwhat)
{
	potenial_pop.close();
	if(glob_sel_acticont.equals("")) return;
	lbl = iwhat.getLabel();
	sqlstm = "update rw_activities_contacts set potential='" + lbl + "' where origid=" + glob_sel_acticont;
	sqlhand.gpSqlExecuter(sqlstm);
	listActiContacts(last_loadcont,glob_current_user);
}

void genColdCallDump()
{
	sqlstm = "select * from rw_activities_contacts where deleted=0";
	recs = sqlhand.gpSqlGetRows(sqlstm);
	if(recs.size() == 0) return;

   	startadder = 1;
	rowcount = 0;
	HashMap myhmap;

	Workbook wb = new HSSFWorkbook();
	Sheet sheet = wb.createSheet("RECEIVALS");
	Font wfont = wb.createFont();
	wfont.setFontHeightInPoints((short)8);
	wfont.setFontName("Arial");

	String[] rhds = { "REC","Dated","User","Customer","Potential","Contact","Designation",
	"Address1","Address2","Address3","Address4","Tel","Fax","Email","Industry","Division",
	"Total No PC","DT","NB","Tech.Level","OS","Brand","Specs","Warranty",
	"Server brand","Server count", "MS-Off Ver", "MS-Off License",
	"ERP", "PABX Brand", "PC/Server remarks",
	"Desktop", "Notebook",
	"Internal Cost of Funds / Finance rate","IT Depreciation", "Usage Tenure",
	"Contact1", "Designation1", "Email1",
	"Contact2", "Designation2", "Email2",
	"Contact3", "Designation3", "Email3",
	"Contact4", "Designation4", "Email4",
	"Customer remarks"
	 };

	String[] flsd = { "username","cust_name","potential","contact_person","designation",
	"cust_address1","cust_address2","cust_address3","cust_address4",
	"cust_tel","cust_fax","cust_email","industry","call_div" };

	String[] hsds = {
	"s_totpc","s_dtperc","s_nbperc","s_techlvl","s_ostype","s_brand","s_specs","s_warranty",
	"s_serverbrand","s_servercount","s_msoffver","s_msofflic",
	"s_erp","s_pabx","s_pcsvrremks",
	"s_dtapprxprice","s_nbapprxprice",
	"s_icffr","s_itdepre","s_usgten",
	"s_cont1","s_desg1","s_email1",
	"s_cont2","s_desg2","s_email2",
	"s_cont3","s_desg3","s_email3",
	"s_cont4","s_desg4","s_email4",
	"s_remarks"
	};

	for(i=0;i<rhds.length;i++)
	{
		POI_CellSetAllBorders(wb,excelInsertString(sheet,rowcount,i,rhds[i]),wfont,true,"");
	}

	rowcount++;
	for(d : recs)
	{
		excelInsertString(sheet,rowcount,0, d.get("origid").toString() );
		excelInsertString(sheet,rowcount,1, dtf2.format(d.get("datecreated")) );
		for(k=0;k<14;k++)
		{
			excelInsertString(sheet,rowcount,k+2, kiboo.checkNullString(d.get(flsd[k])) );
		}

		myhmp = null;
		coldcd = sqlhand.clobToString(d.get("coldcall_rec"));
		if(!coldcd.equals(""))
		{
			myhmap = new HashMap();
			irecs = coldcd.split("::"); // split by ::
			for(int i=0; i<irecs.length; i++)
			{
				tmpstr = irecs[i];
				iparts = tmpstr.split("\\|"); // split the field and data parts
				fieldpart = iparts[0].replace("\"","");
				datapart = iparts[1].replace("\"","");
				//alert(fieldpart + " = " + datapart);
				myhmap.put(fieldpart,datapart);
			}

			for(k=0; k<hsds.length; k++)
			{
				excelInsertString(sheet,rowcount,k+16, kiboo.checkNullString( myhmap.get(hsds[k])) );
			}
		}

		rowcount++;
	}

	jjfn = "coldCalldat.xls";
	outfn = session.getWebApp().getRealPath("tmp/" + jjfn);
	FileOutputStream fileOut = new FileOutputStream(outfn);
	wb.write(fileOut); // Write Excel-file
	fileOut.close();
	downloadFile(kasiexport,jjfn,outfn);
}

]]>
</zscript>

<popup id="potenial_pop" style="opacity:0.8;">
<vbox>
	<button label="NEW" onClick="setContactPotential(self)" />
	<button label="LEAD" onClick="setContactPotential(self)" />
	<button label="POTENTIAL" onClick="setContactPotential(self)" />
	<button label="OPPORTUNITY" onClick="setContactPotential(self)" />
</vbox>
</popup>

<popup id="updateactiv_pop" style="opacity:0.9" >
<div style="background:#204a87; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px" >
<div style="padding:5px;background:#2e3436">
<label sclass="subhead1" value="Activity" />
</div>
<grid>
	<rows>
		<row>
			<label value="Contact person" />
			<textbox id="o_contact_person" width="99%" />
			<label value="Designation" />
			<listbox id="o_designation" mold="select" />
		</row>
		<row>
			<label value="Tel / HP" />
			<textbox id="o_telephone" width="99%" />
			<label value="Email" />
			<textbox id="o_email" width="99%" />
		</row>
		<row spans="1,3">
			<label value="Activity type" />
			<listbox id="o_act_type" mold="select" />
		</row>
		<row spans="1,3">
			<label value="Activity notes" />
			<textbox id="o_act_notes" multiline="true" height="70px" width="99%" style="font-size:9px" />
		</row>
	</rows>
</grid>
<separator height="3px" />
<button id="updatacti_b" label="Update it" onClick="actiFunc(self)" />
</div>
</popup>

<popup id="newacti_pop" style="opacity:0.8" >
<div style="background:#204a87; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px" >

<div style="padding:5px;background:#2e3436">
<label sclass="subhead1" value="Activity" />
</div>

<grid>
	<rows>
		<row>
			<label value="Contact person" />
			<textbox id="k_contact_person" width="99%" />
			<label value="Designation" />
			<listbox id="k_designation" mold="select" />
		</row>
		<row>
			<label value="Tel / HP" />
			<textbox id="k_telephone" width="99%" />
			<label value="Email" />
			<textbox id="k_email" width="99%" />
		</row>
		<row spans="1,3">
			<label value="Activity type" />
			<listbox id="k_act_type" mold="select" />
		</row>
		<row spans="1,3">
			<label value="Activity notes" />
			<textbox id="k_act_notes" multiline="true" height="70px" width="99%" style="font-size:9px" />
		</row>
	</rows>
</grid>
<separator height="3px" />
<button id="realaddacti_b" label="Add it" onClick="actiFunc(self)" />
</div>
</popup>

<!-- update file description popup -->
<popup id="updatefiledesc_popup">
<groupbox width="400px">
	<caption id="updatefiledesc_label" />
	<label value="Description" style="font-size:9px" />
	<textbox id="update_file_description" multiline="true" height="70px" width="99%" style="font-size:9px" />
	<separator height="3px" />
	<hbox>
		<button label="Update" style="font-size:9px" onClick="updateFileDescription(documents_holder,COLDCALL_PREFIX,glob_sel_acticont)" />
		<button label="Close" style="font-size:9px" onClick="updatefiledesc_popup.close()" />
	</hbox>
</groupbox>
</popup>

<!-- upload a file popup -->
<popup id="uploadfile_popup">
<groupbox>
<caption label="Upload a file" />
	<grid>
		<rows>
			<row>
				<label value="Filename" style="font-size:9px" />
				<textbox id="fileupl_file_title" width="200px" style="font-size:9px" />
			</row>
			<row>
				<label value="Description" style="font-size:9px" />
				<textbox id="fileupl_file_description" multiline="true" height="60px" width="200px" style="font-size:9px" />
			</row>
		</rows>
	</grid>
</groupbox>
<separator height="3px" />
<hbox>
	<button label="Select file" onClick="uploadFile(documents_holder,COLDCALL_PREFIX,glob_sel_acticont)" style="font-size:9px" />
	<button label="Close" onClick="uploadfile_popup.close()"  style="font-size:9px" />
</hbox>
</popup>

<style>
.subhead2 { font-size:24px; font-weight:bold; color:#ffffff; text-shadow: 1px 1px #000000; }
.subhead1 {	font-size:18px;	font-weight:bold; color:#ffffff; text-shadow: 1px 1px #000000; }
</style>

<div width="1200px">
<panel id="${MYPANEL}" title="${MYTITLE} ${MYVERSION}" border="normal" collapsible="true" closable="true" >
<panelchildren>

<div style="background:#555753; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px" >

<button label="List my contacts" />
<button label="List all" onClick="listActiContacts(1,glob_current_user)" />
<button id="newcontact_b" label="New contacts" onClick="contFunc(self)" />
<button id="togpoten_b" label="Set classification" onClick="potenial_pop.open(self)" />
<button id="dnusecontact_b" label="Toggle do-not-use" onClick="contFunc(self)" />
<button id="expdump_b" label="Export dumb list" onClick="genColdCallDump()" disabled="true" />

<separator height="3px" />

<div id="acticonts_holder" width="900px" />
<label style="font-size:9px;color:#aaaaaa">**(These customers are not linked to FC6)</label>
</div>

<separator height="5px" />

<div style="background:#2e3436; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px;" id="workarea" visible="false" >

<tabbox>
	<tabs>
		<tab label="Contact details" />
		<tab label="Activities" />
		<tab label="Cold-call data" />
	</tabs>
	<tabpanels>
		<tabpanel>
			<div>
				<separator height="3px" />
				
				<hbox>
					<div>
						<div id="contmeta_holder" width="600px" />
						<separator height="3px" />
						<button id="updatecont_b" label="Update contact details" onClick="contFunc(self)" />
					</div>
					
					<div style="background:#555753; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
					box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px">
						<label sclass="subhead1" value="ATTACHMENT / DOCUMENTS" />
						<separator height="3px" />
						<hbox>
							<button id="uploaddoc_btn" label="Upload file" style="font-size:9px"
								onClick="showUploadPopup(COLDCALL_PREFIX,glob_sel_acticont)" />
							<button id="viewdoc_btn" label="View file" style="font-size:9px" onClick="viewFile()" />
							<button id="editdoc_btn" label="Update" style="font-size:9px" onClick="updatefiledesc_popup.open(self)" />
							<button id="deletedoc_btn" label="Delete" style="font-size:9px"
								onClick="deleteFile(documents_holder,COLDCALL_PREFIX,glob_sel_acticont)" />
						</hbox>
						<separator height="3px" />
						<div id="documents_holder" />
					</div>
				</hbox>
			</div>
		</tabpanel>

		<tabpanel>
			<div>
				<separator height="3px" />
				<hbox>
					<button id="newacti_b" label="New activity" onClick="clearAddActiFields();newacti_pop.open(self)" />
					<button id="delacti_b" label="Delete" onClick="actiFunc(self)" />
				</hbox>
				<separator height="5px" />
				<div id="actis_holder" width="600px" />
			</div>
		</tabpanel>

		<tabpanel style="background:#2e3436" >
			<button id="savecoldcall_b" label="Save cold-call data" onClick="contFunc(self)" />
			<separator height="5px" />
			<div id="coldcall_formholder" width="800px" />
		</tabpanel>
	</tabpanels>
</tabbox>

</div>

<!--
<div id="checks_holder" width="500px" />
<button label="save checkbox" onClick="saveCheckedbox(testrows1)" />
-->

<label id="debugbox" multiline="true" />
<div id="kasiexport" visible="false" />

<zscript>
<![CDATA[

luhand.populateListbox_ByLookup(k_designation, "PERSON_DESIGNATION", 2);
luhand.populateListbox_ByLookup(k_act_type, "ACTIVITIES_TYPE", 2);
luhand.populateListbox_ByLookup(o_designation, "PERSON_DESIGNATION", 2);
luhand.populateListbox_ByLookup(o_act_type, "ACTIVITIES_TYPE", 2);

contmetaform = dynamicForm(contmeta_holder, "contmetaform_grid", "27");
coldcallmform = dynamicForm(coldcall_formholder, "coldcallmetaform_grid", "28");

glob_current_user = useraccessobj.username;
listActiContacts(1,glob_current_user);

//showChecklistItems( checks_holder , 1, "testgrid1" , "testrows1" );

if(useraccessobj.username.equals("mandy") || useraccessobj.username.equals("james")) // 10/03/2014
{
	expdump_b.setDisabled(false);
}

if(useraccessobj.accesslevel == 9)
{
	expdump_b.setDisabled(false);
}


]]>
</zscript>
</panelchildren>
</panel>
</div>
</zk>


