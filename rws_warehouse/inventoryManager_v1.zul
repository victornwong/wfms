<?xml version="1.0" encoding="UTF-8"?>
<?page id="partsinventory_mod"?>
<zk>
<zscript src="../rwglobal/rwglobaldefs.zs" />
<zscript src="../rwglobal/showBOM_gen_v1.zs" />
<zscript src="../rwglobal/formMaker_v1.zs" />
<zscript src="../rwglobal/rwsqlfuncs.zs" />
<zscript src="./partsInventory_funcs.zs" />
<zscript>
<![CDATA[
MYTITLE = "Parts Inventory Manager";
MYVERSION = "v0.3";
MYPANEL = "rwsinvman1";
/*
Title		: Parts Inventory Manager
Written by	: Victor Wong
Dated		: 18/06/2013

**NOTES**
22/01/2014: activate supplier_code and warrenty(created by dunno who) fields

*/
/*
import java.lang.Float;
import groovy.sql.Sql;
import org.zkoss.zk.ui.*;
import org.zkoss.zk.zutl.*;
*/
import java.util.*;
import java.text.*;
import java.math.BigDecimal;
import org.victor.*;
sechand = new SecurityFuncs();

myincludeid = Executions.getCurrent().getParameter("myid");
useraccessobj = sechand.getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);

kiboo = new Generals();
sqlhand = new SqlFuncs();
lbhand = new ListboxHandler();
guihand = new GuiFuncs();
luhand = new LookupFuncs();

STOCKGROUP_HEADER = "#90bce7";
WORKAREA_HEADER = "#4d4d4d";
STOCKGROUP_LBROWS = 6;

global_selected_stockcode = "";

SimpleDateFormat dtf = new SimpleDateFormat("yyyy-MM-dd");

void populateItemMetadata(String istkcode)
{
	skr = getStockItem_rec(istkcode);
	if(skr == null) { guihand.showMessageBox("ERR: Cannot access database.."); return; }
	
	Object[] ob = {	stock_code, supplier_code, entrydate, brandname, m_description, description2,
	qty_in_stock, qty_reorder, last_purchase_date, last_purchase_price, warrenty,
	m_warehousecode, palletno, itemgrade };

	String[] fl = { "Stock_Code", "Supplier_Code", "EntryDate", "BrandName", "Description", "Description2",
	"Qty_In_Stock", "Qty_Reorder", "Last_Purchase_Date", "Last_Purchase_Price", "Warrenty",
	"WarehouseCode", "palletno", "itemgrade" };

	populateUI_Data(ob,fl,skr);

/*
	stock_code.setValue(skr.get("Stock_Code"));
	supplier_code.setValue(kiboo.checkNullString(skr.get("Supplier_Code")));
	entrydate.setValue(skr.get("EntryDate"));
	brandname.setValue(kiboo.checkNullString(skr.get("BrandName")));
	m_description.setValue(kiboo.checkNullString(skr.get("Description")));
	description2.setValue(kiboo.checkNullString(skr.get("Description2")));
	qty_in_stock.setValue(nf.format(skr.get("Qty_In_Stock")));
	qty_reorder.setValue(nf.format(skr.get("Qty_Reorder")));
	last_purchase_date.setValue(skr.get("Last_Purchase_Date"));
	last_purchase_price.setValue(nf2.format(skr.get("Last_Purchase_Price")));
	try { warrenty.setValue( nf.format(skr.get("Warrenty")) ); } catch (Exception e) {}
	m_warehousecode.setValue(kiboo.checkNullString(skr.get("WarehouseCode")));
*/
/*
	lbhand.matchListboxItems(stock_cat,skr.get("Stock_Cat"));
	lbhand.matchListboxItems(groupcode,skr.get("GroupCode"));
	lbhand.matchListboxItems(classcode,skr.get("ClassCode"));
	lbhand.matchListboxItems(class2code,skr.get("class2code"));
	palletno.setValue(kiboo.checkNullString(skr.get("palletno")));
	lbhand.matchListboxItems(itemgrade,kiboo.checkNullString(skr.get("itemgrade")));
*/

	stockheader.setValue("Part Details: " + skr.get("Stock_Code"));
	supplier_part_number.setValue(kiboo.checkNullString(skr.get("Supplier_Part_Number")));

	bomid = (skr.get("bom_id") != null) ? BOM_PREFIX + skr.get("bom_id").toString() : "";
	bom_id.setValue(bomid);
	bom_date.setValue( kiboo.checkNullDate(skr.get("bom_date"),"") );

	isactive.setValue( (skr.get("IsActive") == null) ? "NO" : ( (skr.get("IsActive")) ? "YES" : "NO" ) );
}

void showStockGroupBread()
{
	mstgs = getSelected_StockGroup(mnstkdiv,mnstklbs);
	stockgroup_bread.setValue(mstgs[0] + " > " + mstgs[1] + " > " + mstgs[2] + " > " + mstgs[3]);
}

Object[] partslb_headers = 
{
	new listboxHeaderWidthObj("StockCode",true,"100px"),
	new listboxHeaderWidthObj("Brand",true,"90px"),
	new listboxHeaderWidthObj("Model",true,""),
	new listboxHeaderWidthObj("Grd",true,"30px"),
	new listboxHeaderWidthObj("Stat",true,"30px"),
	new listboxHeaderWidthObj("BOM",true,"30px"),
	new listboxHeaderWidthObj("RMA",true,"30px"),
	new listboxHeaderWidthObj("WH",true,"30px"),
	new listboxHeaderWidthObj("PO",true,"30px"),
};

class partslb_onSelect implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		global_selected_stockcode = lbhand.getListcellItemLabel(isel,0);
		populateItemMetadata(global_selected_stockcode);
	}
}
partscliker = new partslb_onSelect();

// itype: 1=use main listboxes for the categories, 2=use the param strings
void refresh_Parts(int itype, String istkcat, String igroupcode, String iclass1, String iclass2)
{
	fndstks = getSelected_StockGroup(mnstkdiv,mnstklbs);
	stkc = fndstks[0];
	grpc = fndstks[1];
	cls1 = fndstks[2];
	cls2 = fndstks[3];

	if(itype == 2)
	{
		stkc = istkcat;
		grpc = igroupcode;
		cls1 = iclass1;
		cls2 = iclass2;
	}

	lmt = kiboo.replaceSingleQuotes(limitload.getValue()).trim();
	topval = 100;
	try { topval = Integer.parseInt(lmt); } catch (Exception e) {}
	if(topval > 300) topval = 100;

	String[] selstt = {stkc,grpc,cls1,cls2};
	Object[] clickos = { null,new grpcodeClick(),new class1Click(),null };

	if(itype == 2) // type 2, search-item, manually show category breadcrumb
	{
		//autoPointCategories(selstt,mnstkdiv,mnstklbs,clickos);
		stockgroup_bread.setValue(stkc + " > " + grpc + " > " + cls1 + " > " + cls2);
	}
	else
		showStockGroupBread();

	Listbox newlb = lbhand.makeVWListbox_Width(items_holder, partslb_headers, "parts_lb", 5);

	//sqlstm = "select top " + topval.toString() + " stock_code,brandname,description,itemgrade,itemstatus,bom_id,rma_id " +
	// default itype=2, dig only 1 stock-item
	sqlstm = "select top 100 stock_code,brandname,description,itemgrade,itemstatus,bom_id,rma_id " +  
	"from stockmasterdetails where stock_code='" + global_selected_stockcode + "'";

	if(itype == 1) // dig by cat-grpcode-class
		sqlstm = "select top 100 stock_code,brandname,description,itemgrade,itemstatus,bom_id,rma_id " +  
		"from stockmasterdetails " +
		"where stock_cat='" + stkc + "' and (groupcode='0' or groupcode='" + grpc + "') " + 
		"and (classcode='0' or classcode='" + cls1 + "') and (class2code='0' or class2code='" + cls2 + "') " +
		"order by itemgrade";

	screcs = sqlhand.gpSqlGetRows(sqlstm);
	if(screcs.size() == 0) return;

	newlb.setRows( (screcs.size() < 20) ? screcs.size() : 20 );
	newlb.setMold("paging");
	newlb.setMultiple(true);
	newlb.setCheckmark(true);
	newlb.addEventListener("onSelect", partscliker );
	ArrayList kabom = new ArrayList();
	for(dpi : screcs)
	{
		kabom.add(kiboo.checkNullString(dpi.get("stock_code")));
		kabom.add(kiboo.checkNullString(dpi.get("brandname")));
		kabom.add(kiboo.checkNullString(dpi.get("description")));
		kabom.add(kiboo.checkNullString(dpi.get("itemgrade")));
		kabom.add(kiboo.checkNullString(dpi.get("itemstatus")));
		bomid = ( dpi.get("bom_id") == null ) ? "" : BOM_PREFIX + dpi.get("bom_id").toString();
		kabom.add(bomid);
		rmaid =  ( dpi.get("rma_id") == null ) ? "" : dpi.get("rma_id").toString();
		kabom.add(rmaid);
		//kabom.add(dpi.get("entrydate").toString().substring(0,10));
		//kabom.add(lbhand.trimListitemLabel(kiboo.checkNullString(dpi.get("description")),80) );
		lbhand.insertListItems(newlb,kiboo.convertArrayListToStringArray(kabom),"false","");
		kabom.clear();
	}
}

void doFunc(Object iwhat)
{
	itype = iwhat.getId();
	todaydate =  kiboo.todayISODateTimeString();
	refreshparts = false;
	refreshparts_type = 1;
	msgboxtext = sqlstm = "";

	mainsel_stockgroup = getSelected_StockGroup(mnstkdiv,mnstklbs);
	newpart_stockgroup = getSelected_StockGroup(newpart_stockshd,newpart_stockslb);

	kstkc = kgrpc = kcls1 = kcls2 = "0";

	if(itype.equals("inspartrec_butt")) // insert new parts
	{
		createnewpopup.close();

		stkcod = kiboo.replaceSingleQuotes(new_item_name.getValue()).trim();
		if(stkcod.equals("")) return;

		if(checkStockExist(stkcod))
		{
			guihand.showMessageBox("ERR: Cannot have duplicate stock-code / asset-tag");
			return;
		}

		kstkc = newpart_stockgroup[0];
		kgrpc = newpart_stockgroup[1];
		kcls1 = newpart_stockgroup[2];
		kcls2 = newpart_stockgroup[3];

		sqlstm = "insert into stockmasterdetails " + 
		"(stock_code,stock_cat,entrydate,groupcode,classcode,class2code,createdby,last_purchase_date,qty_in_stock,stock_movement) values " +
		"('" + stkcod + "','" + kstkc + "','" + todaydate + "','" + kgrpc + "','" + 
		kcls1 + "','" + kcls2 + "','" + useraccessobj.username + "','" + todaydate + "',1,'')";

		refreshparts = true;
		refreshparts_type = 2;
		msgboxtext = "New part record inserted..";
	}

	if(itype.equals("savepartdet_butt"))
	{
		if(global_selected_stockcode.equals("")) return;

		Object[] ob = { entrydate, brandname, m_description, description2, qty_in_stock, qty_reorder,
		last_purchase_date, last_purchase_price, palletno, itemgrade, supplier_part_number, supplier_code,
		warrenty, m_warehousecode };

		dt = getString_fromUI(ob);
		try { kk = Integer.parseInt(dt[12]); } catch (Exception e) { dt[12] = "0"; } // TODO HARDCODED

		/*
		etr = kiboo.getDateFromDatebox(entrydate);
		brnd = kiboo.replaceSingleQuotes(brandname.getValue()).trim();
		desc1 = kiboo.replaceSingleQuotes(m_description.getValue()).trim();
		desc2 = kiboo.replaceSingleQuotes(description2.getValue()).trim();
		qtys = kiboo.replaceSingleQuotes(qty_in_stock.getValue());
		qtyr = kiboo.replaceSingleQuotes(qty_reorder.getValue());
		lpur = kiboo.getDateFromDatebox(last_purchase_date);
		lpri = kiboo.replaceSingleQuotes(last_purchase_price.getValue());
		plno = kiboo.replaceSingleQuotes(palletno.getValue()).trim();
		igrd = itemgrade.getSelectedItem().getLabel();
		supnum = kiboo.replaceSingleQuotes(supplier_part_number.getValue().trim());
		supcod = kiboo.replaceSingleQuotes(supplier_code.getValue().trim());
		warty = kiboo.replaceSingleQuotes(warrenty.getValue().trim());
		whcod = kiboo.replaceSingleQuotes(m_warehousecode.getValue().trim());
		try { kk = Integer.parseInt(warty); } catch (Exception e) { warty = "0"; }
		*/

		sqlstm = "update stockmasterdetails set entrydate='" + dt[0] + "', brandname='" + dt[1] + "'," +
		"description='" + dt[2] + "', description2='" + dt[3] + "', qty_in_stock=" + dt[4] + "," +
		"qty_reorder=" + dt[5] + ", last_purchase_date='" + dt[6] + "', last_purchase_price=" + dt[7] + "," +
		"createdby='" + useraccessobj.username + "', palletno='" + dt[8] + "', itemgrade='" + dt[9] + 
		"',supplier_part_number='" + dt[10] + "', supplier_code='" + dt[11] + "', warrenty=" + dt[12] + "," +
		"warehousecode='" + dt[13] + "' where stock_code='" + global_selected_stockcode + "'";

		kstkc = mainsel_stockgroup[0];
		kgrpc = mainsel_stockgroup[1];
		kcls1 = mainsel_stockgroup[2];
		kcls2 = mainsel_stockgroup[3];
		refreshparts_type = 1;
	}

	// change part's groupcode and class-codes TODO only certain users can chg stock-group
	if(itype.equals("chggroup_butt"))
	{
		if(global_selected_stockcode.equals("")) return;
		chgpart_stockgroup = getSelected_StockGroup(chgpart_stockshd,chgpart_stockslb);
		kstkc = chgpart_stockgroup[0];
		kgrpc = chgpart_stockgroup[1];
		kcls1 = chgpart_stockgroup[2];
		kcls2 = chgpart_stockgroup[3];
		//msgboxtext = kstkc + " :: " + kgrpc + " :: " + kcls1 + " :: " + kcls2;
		sqlstm = "update stockmasterdetails set stock_cat='" + kstkc + "', groupcode='" + kgrpc + "'," +
		"classcode='" + kcls1 + "', class2code='" + kcls2 + "' where stock_code='" + global_selected_stockcode + "'";

		msgboxtext = "Part's stock-group updated..";
		refreshparts = true;
		refreshparts_type = 2;
	}

	if(itype.equals("searchbyname_butt"))
	{
		kst = kiboo.replaceSingleQuotes(item_search.getValue()).trim();
		if(kst.equals("")) return;

		sqlstm = "select top 50 stock_code,brandname,description,itemgrade,itemstatus from stockmasterdetails " +
		"where stock_code like '%" + kst + "%' or brandname like '%" + kst + "%' or description like '%" + kst + "%' " +
		"or description2 like '%" + kst + "%' ";

		screcs = sqlhand.gpSqlGetRows(sqlstm);
		if(screcs.size() == 0) { guihand.showMessageBox("Nothing found.."); return; }
		Listbox newlb = lbhand.makeVWListbox_Width(founditems_holder, partslb_headers, "foundparts_lb", 20);
		//newlb.addEventListener("onSelect", new partslb_onSelect());
		String[] fls = { "stock_code", "brandname", "description", "itemgrade", "itemstatus" };
		for(dpi : screcs)
		{
			ArrayList kabom = new ArrayList();
			for(i=0;i<fls.length;i++)
			{
				kabom.add(kiboo.checkNullString( dpi.get(fls[i]) ));
			}
			//kabom.add(dpi.get("entrydate").toString().substring(0,10));
			//kabom.add(lbhand.trimListitemLabel(kiboo.checkNullString(dpi.get("description")),80) );
			strarray = kiboo.convertArrayListToStringArray(kabom);	
			lbhand.insertListItems(newlb,strarray,"false","");
		}
		dc_obj = new fnditem_DClicker();
		lbhand.setDoubleClick_ListItems(newlb, dc_obj);
		finditempopup.open(self);
	}

	if(itype.equals("bombuild_b")) // view bom/build popup
	{
		bomid = bom_id.getValue();
		if(bomid.equals("")) return;
		bomid = bomid.substring(3,bomid.length());

		isqlstm = "select cust.name as customer,sri.customerid,sri.createdate,sri.createdby from stockrentalitems sri " +
		"left join Focus5012.dbo.mr000 cust on cust.masterid = sri.customerid where sri.origid=" + bomid;
		bomr = sqlhand.gpSqlFirstRow(isqlstm);
		if(bomr == null) { msgboxtext = "ERR: cannot access BOM table.."; break; }

		hdst = "\tDate: " + dtf.format(bomr.get("createdate"));
		hdst += "\n\tCustomer: " + kiboo.checkNullString(bomr.get("customer")) + "\n\tUser: " + bomr.get("createdby");
		bomid_lbl.setValue(BOM_PREFIX + bomid);
		bomid_hdr.setValue(hdst);

		showBuildItems(bomid,builds_holder);
		bombuild_pop.open(iwhat);
	}

	if(itype.equals("imparts_b")) // import wholelot of parts
	{
		imppart_stockgroup = getSelected_StockGroup(imppart_stockshd,imppart_stockslb);
		kstkc = imppart_stockgroup[0];
		kgrpc = imppart_stockgroup[1];
		kcls1 = imppart_stockgroup[2];
		kcls2 = imppart_stockgroup[3];
		sgctxt = kstkc + " :: " + kgrpc + " :: " + kcls1 + " :: " + kcls2;

		tgs = impasstgs_tb.getValue().trim();
		sns = impsns_tb.getValue().trim();

		if(tgs.equals("") || sns.equals("")) msgboxtext = "Incomplete items or nothing to import";
		else
		{
			if (Messagebox.show("Importing items into " + sgctxt, "Are you sure?", 
			Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) !=  Messagebox.YES) return;
			impThingsToInventory();
		}
	}

	if(!sqlstm.equals("")) sqlhand.gpSqlExecuter(sqlstm);
	if(refreshparts) refresh_Parts(refreshparts_type, kstkc, kgrpc, kcls1, kcls2);
	if(!msgboxtext.equals("")) guihand.showMessageBox(msgboxtext);
}

// 22/01/2014: importing assets and s/nums into inventory
void impThingsToInventory()
{
	tgs = (impasstgs_tb.getValue().trim()).split("\n");

	asts = "";
	for(i=0;i<tgs.length;i++)
	{
		asts += "'" + tgs[i].trim() + "',";
	}
	try { asts = asts.substring(0,asts.length()-1); } catch (Exception e) {}
	sql2 = "select stock_code from stockmasterdetails where stock_code in (" + asts + ");"; // chk for dups
	cdps = sqlhand.gpSqlGetRows(sql2);
	if(cdps.size() != 0)
	{
		msgtxt = "Import FAILED. These asset-tag(s) already in database:\n";
		for(d : cdps)
		{
			msgtxt += d.get("stock_code") + ", ";
		}
		guihand.showMessageBox(msgtxt);
		return;
	}

	imppart_stockgroup = getSelected_StockGroup(imppart_stockshd,imppart_stockslb);
	kstkc = imppart_stockgroup[0];
	kgrpc = imppart_stockgroup[1];
	kcls1 = imppart_stockgroup[2];
	kcls2 = imppart_stockgroup[3];

	sku = kiboo.replaceSingleQuotes(im_warehousecode.getValue().trim());
	plt = kiboo.replaceSingleQuotes(im_palletno.getValue().trim());
	grd = im_itemgrade.getSelectedItem().getLabel();
	supc = kiboo.replaceSingleQuotes(im_supplier_code.getValue().trim());
	wty = kiboo.replaceSingleQuotes(im_warrenty.getValue().trim());
	try { kk = Float.parseFloat(wty); } catch (Exception e) { wty = "0"; }
	pdt = kiboo.getDateFromDatebox(im_last_purchase_date);
	ppr = kiboo.replaceSingleQuotes(im_last_purchase_price.getValue().trim());
	try { kk = Float.parseFloat(ppr); } catch (Exception e) { ppr = "0"; }
	bnm = kiboo.replaceSingleQuotes(im_brandname.getValue().trim());
	mdl = kiboo.replaceSingleQuotes(im_description.getValue().trim());

	sns = (impsns_tb.getValue().trim()).split("\n");
	sqlstm = "";
	todaydate =  kiboo.todayISODateTimeString();

	for(i=0;i<tgs.length;i++)
	{
		try { atg = tgs[i].trim(); } catch (Exception e) { atg = ""; }
		try { snm = sns[i].trim(); } catch (Exception e) { snm = ""; }

		sqlstm += "insert into stockmasterdetails (stock_code,supplier_part_number,palletno,itemgrade,supplier_code," +
		"warrenty,last_purchase_date,last_purchase_price,createdby,stock_cat,groupcode,classcode,class2code," +
		"warehousecode, entrydate, brandname, description) values (" +
		"'" + atg + "','" + snm + "','" + plt + "','" + grd + "','" + supc + "'," +
		wty + ",'" + pdt + "'," + ppr + ",'" + useraccessobj.username + "'," +
		"'" + kstkc + "','" + kgrpc + "','" + kcls1 + "','" + kcls2 + "','" + sku + "','" + todaydate + "'," +
		"'" + bnm + "','" + mdl + "');";
	}

	impparts_pop.close();
	sqlhand.gpSqlExecuter(sqlstm);
	guihand.showMessageBox("Items imported into database..have fun");
}

// search item found double-clicker
class fnditem_DClicker implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		selitem = event.getTarget();
		stkc = lbhand.getListcellItemLabel(selitem,0);
		finditempopup.close();

		// display 'em metadata and LB
		stkr = getStockItem_rec(stkc);
		if(stkr == null) return;
		global_selected_stockcode = stkc;
		refresh_Parts(2,stkr.get("Stock_Cat"),stkr.get("GroupCode"),stkr.get("ClassCode"),stkr.get("class2code"));
		//lbhand.matchListboxItems(parts_lb,stkr.get("Stock_Code"));
		populateItemMetadata(stkc);
	}
}

// item change stock-group update drop-downs
void autoPointChangeStockGroup()
{
	selstt = getSelected_StockGroup(mnstkdiv,mnstklbs);
	Object[] clickos = { null, new chg_grpcodeClick(), new chg_subcls1Click(), null };
	autoPointCategories(selstt,chgpart_stockshd,chgpart_stockslb,clickos);
}

]]>
</zscript>

<popup id="impparts_pop">
<div style="background:#204a87; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px" width="700px" >
<label sclass="subhead" style="color:#ffffff" value="Import parts" />
<separator height="5px" />
<div>
	<grid>
		<rows>
			<row>
				<label value="Stock category" style="font-size:9px" />
				<div id="imp_stkcode_hd">
					<listbox id="imp_stock_cat" mold="select" />
				</div>
				<label value="Group" style="font-size:9px" />
				<div id="imp_grpcode_hd" />
			</row>
			<row>
				<label value="Sub-class 1" style="font-size:9px" />
				<div id="imp_cls1_hd" />
				<label value="Sub-class 2" style="font-size:9px" />
				<div id="imp_cls2_hd" />
			</row>
		</rows>
	</grid>
	<separator height="2px" />
	<div id="imptform_holder" />
</div>

<separator height="3px" />
<hbox>
	<vbox>
		<label value="AssetTags" style="color:#ffffff" />
		<textbox id="impasstgs_tb" multiline="true" width="200px" style="font-size:9px" height="250px" />
	</vbox>
	<vbox>
		<label value="S/Numbers" style="color:#ffffff" />
		<textbox id="impsns_tb" multiline="true" width="250px" style="font-size:9px" height="250px" />
	</vbox>
</hbox>

<separator height="3px" />
<button id="imparts_b" label="Import 'em parts" onClick="doFunc(self)" />

</div>
</popup>

<zscript>
<![CDATA[
// 22/01/2014: import parts stock-cat-group selectors
Div[] imppart_stockshd = { imp_stkcode_hd, imp_grpcode_hd, imp_cls1_hd, imp_cls2_hd };
String[] imppart_stockslb = { "imp_stock_cat","imp_groupcode","imp_classcode","imp_class2code" };

class imp_subcls1Click implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		luid = lbhand.getListcellItemLabel(isel,1);
		newpop_StockSelector(3,luid,imp_cls2_hd,"imp_class2code",null,imppart_stockshd,imppart_stockslb);
	}
}

class imp_grpcodeClick implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		luid = lbhand.getListcellItemLabel(isel,1);
		newpop_StockSelector(2,luid,imp_cls1_hd,"imp_classcode",new imp_subcls1Click(),imppart_stockshd,imppart_stockslb);
		gpHideListbox(imp_cls2_hd,"imp_class2code");
	}
}

class imp_stkcatClick implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		luid = lbhand.getListcellItemLabel(isel,1);
		newpop_StockSelector(1,luid,imp_grpcode_hd,"imp_groupcode",new imp_grpcodeClick(),imppart_stockshd,imppart_stockslb);
		gpHideListbox(imp_cls1_hd,"imp_classcode");
		gpHideListbox(imp_cls2_hd,"imp_class2code");
	}
}

]]>
</zscript>

<popup id="bombuild_pop">
<div style="background:#c17d11; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px" width="450px" >
	<hbox>
		<label id="bomid_lbl" style="color:#222222;font-size:16px;font-weight:bold" />
		<label id="bomid_hdr" style="color:#222222" multiline="true" />
	</hbox>
	<separator height="3px" />
	<div id="builds_holder" />
</div>
</popup>

<popup id="createnewpopup">
<div style="background:#f57900; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
	box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px" width="450px" >
<grid>
	<rows>
		<row spans="1,3">
			<label value="Stock-code/AssetTag" style="font-size:9px" />
			<textbox id="new_item_name" style="font-size:9px" width="99%" />
		</row>
		<row>
			<label value="Stock category" style="font-size:9px" />
			<div id="newstkcode_hd">
				<listbox id="new_stock_cat" mold="select" />
			</div>
			<label value="Group" style="font-size:9px" />
			<div id="newgrpcode_hd" />
		</row>
		<row>
			<label value="Sub-class 1" style="font-size:9px" />
			<div id="newscls1_hd" />
			<label value="Sub-class 2" style="font-size:9px" />
			<div id="newscls2_hd" />
		</row>
	</rows>
</grid>
<separator height="2px" />
<hbox>
	<button id="inspartrec_butt" label="Create it" style="font-size:9px" onClick="doFunc(self)" />
	<label style="font-size:9px">(Once created, you can fill-up the other required info)</label>
</hbox>
</div>
</popup>

<popup id="finditempopup">
<div style="background:#cfee14; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
	box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px" width="450px" >
	
	<div style="background:#4d4d4d"><label style="color:#ffffff">Found item(s)</label></div>
	<div id="founditems_holder" />
</div>
</popup>

<popup id="chgstockgroup_popup">
<div style="background:#cfee14; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
	box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px" width="450px" >
<grid>
	<rows>
		<row>
			<label value="Stock category" style="font-size:9px" />
			<div id="chg_stkcode_hd">
				<listbox id="chg_stock_cat" mold="select" />
			</div>
			<label value="Group" style="font-size:9px" />
			<div id="chg_grpcode_hd" />
		</row>
		<row>
			<label value="Sub-class 1" style="font-size:9px" />
			<div id="chg_cls1_hd" />
			<label value="Sub-class 2" style="font-size:9px" />
			<div id="chg_cls2_hd" />
		</row>
	</rows>
</grid>
<separator height="2px" />
<button id="chggroup_butt" label="Change stock-group" style="font-size:9px" onClick="doFunc(self)" />

</div>
</popup>

<zscript>
<![CDATA[
// chg item's stock-cat-group selectors
Div[] chgpart_stockshd = { chg_stkcode_hd, chg_grpcode_hd, chg_cls1_hd, chg_cls2_hd };
String[] chgpart_stockslb = { "chg_stock_cat","chg_groupcode","chg_classcode","chg_class2code" };

class chg_subcls1Click implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		luid = lbhand.getListcellItemLabel(isel,1);
		newpop_StockSelector(3,luid,chg_cls2_hd,"chg_class2code",null,chgpart_stockshd,chgpart_stockslb);
	}
}

class chg_grpcodeClick implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		luid = lbhand.getListcellItemLabel(isel,1);
		newpop_StockSelector(2,luid,chg_cls1_hd,"chg_classcode",new chg_subcls1Click(),chgpart_stockshd,chgpart_stockslb);
		gpHideListbox(chg_cls2_hd,"chg_class2code");
	}
}

class chg_stkcatClick implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		luid = lbhand.getListcellItemLabel(isel,1);
		newpop_StockSelector(1,luid,chg_grpcode_hd,"chg_groupcode",new chg_grpcodeClick(),chgpart_stockshd,chgpart_stockslb);
		gpHideListbox(chg_cls1_hd,"chg_classcode");
		gpHideListbox(chg_cls2_hd,"chg_class2code");
	}
}

]]>
</zscript>

<style>
.subhead { font-size:16px; font-weight:bold; color:#ffffff; text-shadow: 1px 1px #000000; }
.subhead2 { font-size:24px; font-weight:bold; color:#ffffff; text-shadow: 1px 1px #000000; }
</style>

<div width="1200px">
<panel id="${MYPANEL}" title="${MYTITLE} ${MYVERSION}" border="normal" collapsible="true" closable="true" >
<panelchildren>
<div style="background:${STOCKGROUP_HEADER}; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px" width="99%">
<hbox>
	<grid>
		<rows>
			<row>
				<label value="Stock-code/AssetTag" style="font-size:9px" />
				<textbox id="item_search" style="font-size:9px" width="99%" />
				<button id="searchbyname_butt" label="Find" style="font-size:9px" onClick="doFunc(self)" />
			</row>
		</rows>
	</grid>
	<separator width="2px" />
	<hbox>
		<label style="font-size:9px">Load limit</label>
		<combobox id="limitload" style="font-size:9px" value="100">
			<comboitem label="100" />
			<comboitem label="200" />
			<comboitem label="300" />
		</combobox>
		<button label="Load parts" onClick='refresh_Parts(1,"","","","")' />
		<button id="newpart_butt" label="Create new spare-part record" onClick="createnewpopup.open(self)" />
		<button label="Import parts" onClick="impparts_pop.open(self)" />

		<div id="adminstuff" style="background:#ff0000;padding:2px" visible="false">
			<button label="Set status" style="font-size:9px" />
		</div>
	</hbox>
</hbox>

</div>
	<separator height="3px" />
	<hbox>
		<vbox>
			<div style="background:${STOCKGROUP_HEADER}; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
			box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px">
				Stock Category
				<separator height="2px" />
				<div id="stocklb_holder">
					<listbox id="stockcat_lb" style="font-size:9px;background:#729fcf" width="180px" mold="select" rows="${STOCKGROUP_LBROWS}" />
				</div>
			</div>

			<div style="background:${STOCKGROUP_HEADER}; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
			box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px">
				Group
				<separator height="2px" />
				<div id="grouplb_holder" />
			</div>

			<div style="background:${STOCKGROUP_HEADER}; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
			box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px">
				Sub-class 1
				<separator height="2px" />
				<div id="class1lb_holder" />
			</div>

			<div style="background:${STOCKGROUP_HEADER}; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
			box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px">
				Sub-class 2
				<separator height="2px" />
				<div id="class2lb_holder" />
			</div>

		</vbox>

		<vbox> <!-- parts listbox and workarea container -->
		<div style="background:${STOCKGROUP_HEADER}; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
		box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px" id="items_holder" width="900px">

			<label id="stockgroup_bread" style="font-weight:bold" />
			<separator height="3px" />
		</div>

		<div id="workarea" style="background:${STOCKGROUP_HEADER}; -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000;
			box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px">

			<div style="background:${WORKAREA_HEADER};padding:2px">
				<label id="stockheader" style="color:#ffffff">Part Details</label>
			</div>
			<separator height="2px" />
			<div id="form_holder" />

			<!--
			<row>
				<label value="Stock category" style="font-size:9px" />
				<listbox id="stock_cat" style="font-size:9px" mold="select" />
				<label value="Group" style="font-size:9px" />
				<listbox id="groupcode" style="font-size:9px" mold="select" />
			</row>
			<row>
				<label value="Sub-class 1" style="font-size:9px" />
				<listbox id="classcode" style="font-size:9px" mold="select" />
				<label value="Sub-class 2" style="font-size:9px" />
				<listbox id="class2code" style="font-size:9px" mold="select" />
			</row>
			-->

			<separator height="2px" />
			<hbox>
				<button id="savepartdet_butt" label="Update details" style="font-size:9px" onClick="doFunc(self)" />
				<button id="bombuild_b" label="View BOM/build" style="font-size:9px" onClick="doFunc(self)" />
				<button id="chgg_popu" label="Change group-class" style="font-size:9px" onClick="autoPointChangeStockGroup(); chgstockgroup_popup.open(self)" />
			</hbox>
		</div> <!-- ENDOF workarea -->
		
		</vbox> <!-- ENDOF parts listbox and workarea container -->

	</hbox>

<zscript>
<![CDATA[

// Main stock-cat-group listbox clickers

String[] mnstklbs = { "stockcat_lb", "group_lb", "class1_lb", "class2_lb" };
Div[] mnstkdiv = { stocklb_holder, grouplb_holder, class1lb_holder, class2lb_holder };

class class1Click implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		luid = lbhand.getListcellItemLabel(isel,1);
		newpop_StockSelector(3,luid,class2lb_holder,"class2_lb",null,mnstkdiv,mnstklbs);
		class2_lb.setRows(STOCKGROUP_LBROWS);
	}
}

class grpcodeClick implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		luid = lbhand.getListcellItemLabel(isel,1);
		newpop_StockSelector(2,luid,class1lb_holder,"class1_lb",new class1Click(),mnstkdiv,mnstklbs);
		class1_lb.setRows(STOCKGROUP_LBROWS);
		gpHideListbox(class2lb_holder,"class2_lb");
	}
}

class stkcatClick implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		luid = lbhand.getListcellItemLabel(isel,1);
		newpop_StockSelector(1,luid,grouplb_holder,"group_lb",new grpcodeClick(),mnstkdiv,mnstklbs);
		group_lb.setRows(STOCKGROUP_LBROWS);
		gpHideListbox(class1lb_holder,"class1_lb");
		gpHideListbox(class2lb_holder,"class2_lb");
	}
}

// main stock-group selectors
luhand.populateListBox_ValueSelection(stockcat_lb,"STOCK_CAT",2,8);
stockcat_lb.addEventListener("onSelect", new stkcatClick());

// ENDOF -- Main stock-cat-group listbox clickers

// New parts popup stock-cat-group selectors
Div[] newpart_stockshd = { newstkcode_hd, newgrpcode_hd, newscls1_hd, newscls2_hd };
String[] newpart_stockslb = { "new_stock_cat","new_groupcode","new_classcode","new_class2code" };

class new_subcls1Click implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		luid = lbhand.getListcellItemLabel(isel,1);
		newpop_StockSelector(3,luid,newscls2_hd,"new_class2code",null,newpart_stockshd,newpart_stockslb);
	}
}

class new_grpcodeClick implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		luid = lbhand.getListcellItemLabel(isel,1);
		newpop_StockSelector(2,luid,newscls1_hd,"new_classcode",new new_subcls1Click(),newpart_stockshd,newpart_stockslb);
		gpHideListbox(newscls2_hd,"new_class2code");
	}
}

class new_stkcatClick implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		luid = lbhand.getListcellItemLabel(isel,1);
		newpop_StockSelector(1,luid,newgrpcode_hd,"new_groupcode",new new_grpcodeClick(),newpart_stockshd,newpart_stockslb);
		gpHideListbox(newscls1_hd,"new_classcode");
		gpHideListbox(newscls2_hd,"new_class2code");
	}
}

// for createnew-item popup
luhand.populateListBox_ValueSelection(new_stock_cat,"STOCK_CAT",2,8);
new_stock_cat.addEventListener("onSelect", new new_stkcatClick());

// ENDOF -- New parts popup stock-cat-group selectors

glob_formmaker = dynamicForm(form_holder, "partmetaform", "1"); // in rwsqlfuncs.zs, need to move somewhere..
imppartsform = dynamicForm(imptform_holder, "impmetaform", "29");

// for change item stock-group popup
luhand.populateListBox_ValueSelection(chg_stock_cat,"STOCK_CAT",2,8);
chg_stock_cat.addEventListener("onSelect", new chg_stkcatClick());

// for import-items popup
luhand.populateListBox_ValueSelection(imp_stock_cat,"STOCK_CAT",2,8);
imp_stock_cat.addEventListener("onSelect", new imp_stkcatClick());

//luhand.populateListbox_ByLookup(itemgrade,"PARTS_GRADES",2);

if(useraccessobj.accesslevel >= 9)
{
	adminstuff.setVisible(true);
}

]]>
</zscript>

</panelchildren>
</panel>
</div>
</zk>

